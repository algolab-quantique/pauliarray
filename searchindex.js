Search.setIndex({"alltitles": {"API Reference": [[8, "api-reference"]], "API reference": [[8, null]], "Commutation": [[12, "commutation"]], "Commutator": [[9, "commutator"]], "Commutators": [[9, null]], "Composition": [[12, "composition"]], "Data Structures": [[11, null]], "Drive Hamiltonian": [[9, "drive-hamiltonian"]], "Fermion to Qubit Mapping": [[10, null]], "Fermionic Hamiltonian with Qiskit": [[10, "fermionic-hamiltonian-with-qiskit"]], "General (Random) Mapping with PauliArray": [[10, "general-random-mapping-with-pauliarray"]], "Indexing and Masking": [[12, "indexing-and-masking"]], "Individual Commutators": [[9, "individual-commutators"]], "Installation": [[8, "installation"]], "Ising Hamiltonian": [[9, "ising-hamiltonian"]], "Jordan Wigner Mapping with PauliArray": [[10, "jordan-wigner-mapping-with-pauliarray"]], "Jordan Wigner Mapping with Qiskit": [[10, "jordan-wigner-mapping-with-qiskit"]], "Module contents": [[1, "module-pauliarray"], [2, "module-pauliarray.binary"], [3, "module-pauliarray.conversion"], [4, "module-pauliarray.mapping"], [5, "module-pauliarray.pauli"], [6, "module-pauliarray.utils"], [7, "module-tests"]], "Operations": [[12, null]], "Operator": [[11, "operator"]], "OperatorArrayType1": [[11, "operatorarraytype1"]], "PauliArray": [[8, null], [11, "pauliarray"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"]], "Subpackages": [[1, "subpackages"]], "To develop PauliArray": [[8, "to-develop-pauliarray"]], "Tutorials": [[8, "tutorials"], [8, null]], "User Guides": [[8, "user-guides"], [8, null]], "WeightedPauliArray": [[11, "weightedpauliarray"]], "pauliarray": [[0, null]], "pauliarray package": [[1, null]], "pauliarray.binary package": [[2, null]], "pauliarray.binary.bit_operations module": [[2, "module-pauliarray.binary.bit_operations"]], "pauliarray.binary.symplectic module": [[2, "module-pauliarray.binary.symplectic"]], "pauliarray.conversion package": [[3, null]], "pauliarray.conversion.openfermion module": [[3, "module-pauliarray.conversion.openfermion"]], "pauliarray.conversion.pennylane module": [[3, "module-pauliarray.conversion.pennylane"]], "pauliarray.conversion.qiskit module": [[3, "module-pauliarray.conversion.qiskit"]], "pauliarray.mapping package": [[4, null]], "pauliarray.mapping.fermion module": [[4, "module-pauliarray.mapping.fermion"]], "pauliarray.pauli package": [[5, null]], "pauliarray.pauli.operator module": [[5, "module-pauliarray.pauli.operator"]], "pauliarray.pauli.operator_array_type_1 module": [[5, "module-pauliarray.pauli.operator_array_type_1"]], "pauliarray.pauli.operator_array_type_2 module": [[5, "module-pauliarray.pauli.operator_array_type_2"]], "pauliarray.pauli.pauli_array module": [[5, "module-pauliarray.pauli.pauli_array"]], "pauliarray.pauli.weighted_pauli_array module": [[5, "module-pauliarray.pauli.weighted_pauli_array"]], "pauliarray.utils package": [[6, null]], "pauliarray.utils.array_operations module": [[6, "module-pauliarray.utils.array_operations"]], "pauliarray.utils.pauli_array_library module": [[6, "module-pauliarray.utils.pauli_array_library"]], "tests package": [[7, null]], "tests.test_bits_operations module": [[7, "module-tests.test_bits_operations"]], "tests.test_conversion module": [[7, "module-tests.test_conversion"]], "tests.test_mapping module": [[7, "module-tests.test_mapping"]], "tests.test_operator module": [[7, "module-tests.test_operator"]], "tests.test_operator_array_type_1 module": [[7, "module-tests.test_operator_array_type_1"]], "tests.test_operator_array_type_2 module": [[7, "module-tests.test_operator_array_type_2"]], "tests.test_pauli_array module": [[7, "module-tests.test_pauli_array"]], "tests.test_symplectic module": [[7, "module-tests.test_symplectic"]], "tests.test_weighted_pauli_array module": [[7, "module-tests.test_weighted_pauli_array"]]}, "docnames": ["api_reference/modules", "api_reference/pauliarray", "api_reference/pauliarray.binary", "api_reference/pauliarray.conversion", "api_reference/pauliarray.mapping", "api_reference/pauliarray.pauli", "api_reference/pauliarray.utils", "api_reference/tests", "index", "tutorials/commutators", "tutorials/fermion_to_qubit_mapping", "user_guide/data_structures", "user_guide/operations"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_reference/modules.rst", "api_reference/pauliarray.rst", "api_reference/pauliarray.binary.rst", "api_reference/pauliarray.conversion.rst", "api_reference/pauliarray.mapping.rst", "api_reference/pauliarray.pauli.rst", "api_reference/pauliarray.utils.rst", "api_reference/tests.rst", "index.rst", "tutorials/commutators.rst", "tutorials/fermion_to_qubit_mapping.rst", "user_guide/data_structures.rst", "user_guide/operations.rst"], "indexentries": {"__add__() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.__add__", false]], "__eq__() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.__eq__", false]], "__eq__() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.__eq__", false]], "__eq__() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.__eq__", false]], "__eq__() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.__eq__", false]], "__getitem__() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.__getitem__", false]], "__getitem__() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.__getitem__", false]], "__init__() (pauliarray.mapping.fermion.bravyikitaev method)": [[4, "pauliarray.mapping.fermion.BravyiKitaev.__init__", false]], "__init__() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.__init__", false]], "__init__() (pauliarray.mapping.fermion.jordanwigner method)": [[4, "pauliarray.mapping.fermion.JordanWigner.__init__", false]], "__init__() (pauliarray.mapping.fermion.parity method)": [[4, "pauliarray.mapping.fermion.Parity.__init__", false]], "__init__() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.__init__", false]], "__init__() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.__init__", false]], "__init__() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.__init__", false]], "__mul__() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.__mul__", false]], "__mul__() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.__mul__", false]], "__mul__() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.__mul__", false]], "__rmul__() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.__rmul__", false]], "__rmul__() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.__rmul__", false]], "__rmul__() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.__rmul__", false]], "__str__() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.__str__", false]], "__str__() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.__str__", false]], "_build_bravyi_kitaev_mapping_matrix() (pauliarray.mapping.fermion.bravyikitaev method)": [[4, "pauliarray.mapping.fermion.BravyiKitaev._build_bravyi_kitaev_mapping_matrix", false]], "_flip_factors() (pauliarray.mapping.fermion.fermionmapping static method)": [[4, "pauliarray.mapping.fermion.FermionMapping._flip_factors", false]], "_flip_operators() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping._flip_operators", false]], "_heavyside_matrix (pauliarray.mapping.fermion.fermionmapping attribute)": [[4, "pauliarray.mapping.fermion.FermionMapping._heavyside_matrix", false]], "_mapping_matrix_inv (pauliarray.mapping.fermion.fermionmapping attribute)": [[4, "pauliarray.mapping.fermion.FermionMapping._mapping_matrix_inv", false]], "_mul() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1._mul", false]], "_mul() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2._mul", false]], "_operator_ndarray_to_wpaulis() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 static method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1._operator_ndarray_to_wpaulis", false]], "_parity_matrix (pauliarray.mapping.fermion.fermionmapping attribute)": [[4, "pauliarray.mapping.fermion.FermionMapping._parity_matrix", false]], "_update_factors() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping._update_factors", false]], "_update_operators() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping._update_operators", false]], "_update_operators_2() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping._update_operators_2", false]], "_update_operators_4() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping._update_operators_4", false]], "add() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.add", false]], "add() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.add", false]], "add() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.add", false]], "add_operator() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.add_operator", false]], "add_operator_array_type_1() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.add_operator_array_type_1", false]], "add_operator_array_type_2() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.add_operator_array_type_2", false]], "add_pauli_array() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.add_pauli_array", false]], "add_scalar() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.add_scalar", false]], "add_scalar() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.add_scalar", false]], "add_weighted_pauli_array() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.add_weighted_pauli_array", false]], "adjoint() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.adjoint", false]], "adjoint() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.adjoint", false]], "adjoint() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.adjoint", false]], "all_equal() (in module pauliarray.utils.array_operations)": [[6, "pauliarray.utils.array_operations.all_equal", false]], "anticommutator() (in module pauliarray.pauli.operator)": [[5, "pauliarray.pauli.operator.anticommutator", false]], "anticommutator() (in module pauliarray.pauli.operator_array_type_1)": [[5, "pauliarray.pauli.operator_array_type_1.anticommutator", false]], "anticommutator() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.anticommutator", false]], "anticommutator() (in module pauliarray.pauli.weighted_pauli_array)": [[5, "pauliarray.pauli.weighted_pauli_array.anticommutator", false]], "argsort() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.argsort", false]], "assemble_creation_annihilation_operators() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.assemble_creation_annihilation_operators", false]], "assemble_one_body_operator_array() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.assemble_one_body_operator_array", false]], "assemble_qubit_hamiltonian_from_arrays() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.assemble_qubit_hamiltonian_from_arrays", false]], "assemble_qubit_hamiltonian_from_sparses() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.assemble_qubit_hamiltonian_from_sparses", false]], "assemble_two_body_operator_array() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.assemble_two_body_operator_array", false]], "basis_paulis (pauliarray.pauli.operator_array_type_2.operatorarraytype2 property)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.basis_paulis", false]], "bit_sum() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.bit_sum", false]], "bitwise_commute_with() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.bitwise_commute_with", false]], "bitwise_commute_with() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.bitwise_commute_with", false]], "bravyikitaev (class in pauliarray.mapping.fermion)": [[4, "pauliarray.mapping.fermion.BravyiKitaev", false]], "broadcast_shape() (in module pauliarray.utils.array_operations)": [[6, "pauliarray.utils.array_operations.broadcast_shape", false]], "broadcast_to() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.broadcast_to", false]], "broadcast_to() (in module pauliarray.pauli.weighted_pauli_array)": [[5, "pauliarray.pauli.weighted_pauli_array.broadcast_to", false]], "broadcasted_index() (in module pauliarray.utils.array_operations)": [[6, "pauliarray.utils.array_operations.broadcasted_index", false]], "build_basis_paulis() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 static method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.build_basis_paulis", false]], "clifford_conjugate() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.clifford_conjugate", false]], "clifford_conjugate() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.clifford_conjugate", false]], "clifford_conjugate() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.clifford_conjugate", false]], "clifford_conjugate() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.clifford_conjugate", false]], "clifford_conjugate_pauli_array() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.clifford_conjugate_pauli_array", false]], "clifford_conjugate_pauli_array_old() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.clifford_conjugate_pauli_array_old", false]], "coisotropic_subspace() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.coisotropic_subspace", false]], "combine_basis_paulis() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.combine_basis_paulis", false]], "combine_repeated_terms() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.combine_repeated_terms", false]], "combine_repeated_terms() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.combine_repeated_terms", false]], "commutator() (in module pauliarray.pauli.operator)": [[5, "pauliarray.pauli.operator.commutator", false]], "commutator() (in module pauliarray.pauli.operator_array_type_1)": [[5, "pauliarray.pauli.operator_array_type_1.commutator", false]], "commutator() (in module pauliarray.pauli.operator_array_type_2)": [[5, "pauliarray.pauli.operator_array_type_2.commutator", false]], "commutator() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.commutator", false]], "commutator() (in module pauliarray.pauli.weighted_pauli_array)": [[5, "pauliarray.pauli.weighted_pauli_array.commutator", false]], "commutator2() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.commutator2", false]], "commute_with() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.commute_with", false]], "commute_with() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.commute_with", false]], "compose() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.compose", false]], "compose() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.compose", false]], "compose() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.compose", false]], "compose() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.compose", false]], "compose() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.compose", false]], "compose_operator() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.compose_operator", false]], "compose_operator_array_type_1() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.compose_operator_array_type_1", false]], "compose_operator_array_type_2() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.compose_operator_array_type_2", false]], "compose_pauli_array() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.compose_pauli_array", false]], "compose_weighted_pauli_array() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.compose_weighted_pauli_array", false]], "compress_qubits() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.compress_qubits", false]], "compress_qubits() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.compress_qubits", false]], "compress_qubits() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.compress_qubits", false]], "concatenate() (in module pauliarray.pauli.operator_array_type_1)": [[5, "pauliarray.pauli.operator_array_type_1.concatenate", false]], "concatenate() (in module pauliarray.pauli.operator_array_type_2)": [[5, "pauliarray.pauli.operator_array_type_2.concatenate", false]], "concatenate() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.concatenate", false]], "concatenate() (in module pauliarray.pauli.weighted_pauli_array)": [[5, "pauliarray.pauli.weighted_pauli_array.concatenate", false]], "conjugate_subspace() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.conjugate_subspace", false]], "copy() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.copy", false]], "copy() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.copy", false]], "copy() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.copy", false]], "copy() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.copy", false]], "covariances_from_paulis() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.covariances_from_paulis", false]], "covariances_from_paulis() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.covariances_from_paulis", false]], "covariances_from_paulis() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.covariances_from_paulis", false]], "covariances_from_paulis() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.covariances_from_paulis", false]], "covariances_from_paulis() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.covariances_from_paulis", false]], "cx() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.cx", false]], "cx() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.cx", false]], "cx() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.cx", false]], "cx() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.cx", false]], "cz() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.cz", false]], "cz() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.cz", false]], "cz() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.cz", false]], "cz() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.cz", false]], "dot() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.dot", false]], "dot() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.dot", false]], "empty() (pauliarray.pauli.operator.operator class method)": [[5, "pauliarray.pauli.operator.Operator.empty", false]], "empty() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray class method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.empty", false]], "expand_dims() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.expand_dims", false]], "expand_dims() (in module pauliarray.pauli.weighted_pauli_array)": [[5, "pauliarray.pauli.weighted_pauli_array.expand_dims", false]], "expectation_values_from_paulis() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.expectation_values_from_paulis", false]], "expectation_values_from_paulis() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.expectation_values_from_paulis", false]], "expectation_values_from_paulis() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.expectation_values_from_paulis", false]], "expectation_values_from_paulis() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.expectation_values_from_paulis", false]], "expectation_values_from_paulis() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.expectation_values_from_paulis", false]], "extract() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.extract", false]], "extract() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.extract", false]], "extract_fermionic_op() (in module pauliarray.conversion.qiskit)": [[3, "pauliarray.conversion.qiskit.extract_fermionic_op", false]], "fast_flat_unique() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.fast_flat_unique", false]], "fermionmapping (class in pauliarray.mapping.fermion)": [[4, "pauliarray.mapping.fermion.FermionMapping", false]], "filter_weights() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.filter_weights", false]], "filter_weights() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.filter_weights", false]], "filter_weights() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.filter_weights", false]], "flatten() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.flatten", false]], "flatten() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.flatten", false]], "flatten() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.flatten", false]], "flatten() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.flatten", false]], "flip_zx() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.flip_zx", false]], "flip_zx() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.flip_zx", false]], "from_labels() (pauliarray.pauli.pauli_array.pauliarray class method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.from_labels", false]], "from_labels_and_weights() (pauliarray.pauli.operator.operator class method)": [[5, "pauliarray.pauli.operator.Operator.from_labels_and_weights", false]], "from_labels_and_weights() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray class method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.from_labels_and_weights", false]], "from_matrix() (pauliarray.pauli.operator.operator class method)": [[5, "pauliarray.pauli.operator.Operator.from_matrix", false]], "from_npz() (pauliarray.pauli.operator.operator class method)": [[5, "pauliarray.pauli.operator.Operator.from_npz", false]], "from_npz() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray class method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.from_npz", false]], "from_operator() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 class method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.from_operator", false]], "from_operator_list() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 class method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.from_operator_list", false]], "from_operator_list() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 class method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.from_operator_list", false]], "from_operator_ndarray() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 class method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.from_operator_ndarray", false]], "from_operator_ndarray() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 class method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.from_operator_ndarray", false]], "from_pauli_array() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 class method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.from_pauli_array", false]], "from_pauli_array() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 class method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.from_pauli_array", false]], "from_paulis() (pauliarray.pauli.operator.operator class method)": [[5, "pauliarray.pauli.operator.Operator.from_paulis", false]], "from_paulis() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray class method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.from_paulis", false]], "from_paulis_and_weights() (pauliarray.pauli.operator.operator class method)": [[5, "pauliarray.pauli.operator.Operator.from_paulis_and_weights", false]], "from_weighted_pauli_array() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 class method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.from_weighted_pauli_array", false]], "from_z_strings_and_x_strings_and_weights() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray class method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.from_z_strings_and_x_strings_and_weights", false]], "from_zx_strings() (pauliarray.pauli.pauli_array.pauliarray class method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.from_zx_strings", false]], "gen_complete_pauli_array_basis() (in module pauliarray.utils.pauli_array_library)": [[6, "pauliarray.utils.pauli_array_library.gen_complete_pauli_array_basis", false]], "gen_random_pauli_array() (in module pauliarray.utils.pauli_array_library)": [[6, "pauliarray.utils.pauli_array_library.gen_random_pauli_array", false]], "generators() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.generators", false]], "generators_with_map() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.generators_with_map", false]], "get_operator() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.get_operator", false]], "get_operator() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.get_operator", false]], "get_qubit_operators_list() (in module tests.test_conversion)": [[7, "tests.test_conversion.get_qubit_operators_list", false]], "gram_schmidt_orthogonalization() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.gram_schmidt_orthogonalization", false]], "h() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.h", false]], "h() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.h", false]], "h() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.h", false]], "h() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.h", false]], "heavyside_matrix (pauliarray.mapping.fermion.fermionmapping property)": [[4, "pauliarray.mapping.fermion.FermionMapping.heavyside_matrix", false]], "identities() (pauliarray.pauli.pauli_array.pauliarray class method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.identities", false]], "identity() (pauliarray.pauli.operator.operator class method)": [[5, "pauliarray.pauli.operator.Operator.identity", false]], "inspect() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.inspect", false]], "inspect() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.inspect", false]], "inspect() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.inspect", false]], "inspect() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.inspect", false]], "intersection() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.intersection", false]], "intersection_row_space() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.intersection_row_space", false]], "inv() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.inv", false]], "is_broadcastable() (in module pauliarray.utils.array_operations)": [[6, "pauliarray.utils.array_operations.is_broadcastable", false]], "is_clifford() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.is_clifford", false]], "is_coisotropic() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.is_coisotropic", false]], "is_concatenatable() (in module pauliarray.utils.array_operations)": [[6, "pauliarray.utils.array_operations.is_concatenatable", false]], "is_diagonal() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.is_diagonal", false]], "is_diagonal() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.is_diagonal", false]], "is_identity() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.is_identity", false]], "is_isotropic() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.is_isotropic", false]], "is_lagrangian() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.is_lagrangian", false]], "is_orthogonal() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.is_orthogonal", false]], "is_orthogonal() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.is_orthogonal", false]], "is_scalar() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.is_scalar", false]], "is_stackatable() (in module pauliarray.utils.array_operations)": [[6, "pauliarray.utils.array_operations.is_stackatable", false]], "is_unitary() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.is_unitary", false]], "isotropic_subspace() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.isotropic_subspace", false]], "jordanwigner (class in pauliarray.mapping.fermion)": [[4, "pauliarray.mapping.fermion.JordanWigner", false]], "kernel() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.kernel", false]], "label_table_1d() (pauliarray.pauli.pauli_array.pauliarray static method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.label_table_1d", false]], "label_table_1d() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray static method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.label_table_1d", false]], "label_table_2d() (pauliarray.pauli.pauli_array.pauliarray static method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.label_table_2d", false]], "label_table_2d() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray static method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.label_table_2d", false]], "label_table_nd() (pauliarray.pauli.pauli_array.pauliarray static method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.label_table_nd", false]], "label_table_nd() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray static method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.label_table_nd", false]], "label_to_z_string_x_string() (pauliarray.pauli.pauli_array.pauliarray static method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.label_to_z_string_x_string", false]], "labels_and_weights_from_qubit_operator() (in module pauliarray.conversion.openfermion)": [[3, "pauliarray.conversion.openfermion.labels_and_weights_from_qubit_operator", false]], "labels_to_z_strings_x_strings() (pauliarray.pauli.pauli_array.pauliarray static method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.labels_to_z_strings_x_strings", false]], "lagrangian_subspace() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.lagrangian_subspace", false]], "majoranas() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.majoranas", false]], "mapping_matrix (pauliarray.mapping.fermion.fermionmapping attribute)": [[4, "pauliarray.mapping.fermion.FermionMapping.mapping_matrix", false]], "mapping_matrix_inv (pauliarray.mapping.fermion.fermionmapping property)": [[4, "pauliarray.mapping.fermion.FermionMapping.mapping_matrix_inv", false]], "matmul() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.matmul", false]], "matrix_from_zx_ints() (pauliarray.pauli.pauli_array.pauliarray static method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.matrix_from_zx_ints", false]], "merge_zx_strings() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.merge_zx_strings", false]], "module": [[1, "module-pauliarray", false], [2, "module-pauliarray.binary", false], [2, "module-pauliarray.binary.bit_operations", false], [2, "module-pauliarray.binary.symplectic", false], [3, "module-pauliarray.conversion", false], [3, "module-pauliarray.conversion.openfermion", false], [3, "module-pauliarray.conversion.pennylane", false], [3, "module-pauliarray.conversion.qiskit", false], [4, "module-pauliarray.mapping", false], [4, "module-pauliarray.mapping.fermion", false], [5, "module-pauliarray.pauli", false], [5, "module-pauliarray.pauli.operator", false], [5, "module-pauliarray.pauli.operator_array_type_1", false], [5, "module-pauliarray.pauli.operator_array_type_2", false], [5, "module-pauliarray.pauli.pauli_array", false], [5, "module-pauliarray.pauli.weighted_pauli_array", false], [6, "module-pauliarray.utils", false], [6, "module-pauliarray.utils.array_operations", false], [6, "module-pauliarray.utils.pauli_array_library", false], [7, "module-tests", false], [7, "module-tests.test_bits_operations", false], [7, "module-tests.test_conversion", false], [7, "module-tests.test_mapping", false], [7, "module-tests.test_operator", false], [7, "module-tests.test_operator_array_type_1", false], [7, "module-tests.test_operator_array_type_2", false], [7, "module-tests.test_pauli_array", false], [7, "module-tests.test_symplectic", false], [7, "module-tests.test_weighted_pauli_array", false]], "moveaxis() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.moveaxis", false]], "moveaxis() (in module pauliarray.pauli.weighted_pauli_array)": [[5, "pauliarray.pauli.weighted_pauli_array.moveaxis", false]], "mul_scalar() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.mul_scalar", false]], "mul_weights() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.mul_weights", false]], "mul_weights() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.mul_weights", false]], "mul_weights() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.mul_weights", false]], "mul_weights() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.mul_weights", false]], "name (pauliarray.mapping.fermion.fermionmapping attribute)": [[4, "pauliarray.mapping.fermion.FermionMapping.name", false]], "ndim (pauliarray.pauli.operator_array_type_1.operatorarraytype1 property)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.ndim", false]], "ndim (pauliarray.pauli.operator_array_type_2.operatorarraytype2 property)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.ndim", false]], "ndim (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.ndim", false]], "ndim (pauliarray.pauli.weighted_pauli_array.weightedpauliarray property)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.ndim", false]], "new() (pauliarray.pauli.pauli_array.pauliarray class method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.new", false]], "new() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray class method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.new", false]], "new_concatenate_shape() (in module pauliarray.utils.array_operations)": [[6, "pauliarray.utils.array_operations.new_concatenate_shape", false]], "num_ids (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.num_ids", false]], "num_non_ids (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.num_non_ids", false]], "num_qubits (pauliarray.mapping.fermion.fermionmapping property)": [[4, "pauliarray.mapping.fermion.FermionMapping.num_qubits", false]], "num_qubits (pauliarray.pauli.operator.operator property)": [[5, "pauliarray.pauli.operator.Operator.num_qubits", false]], "num_qubits (pauliarray.pauli.operator_array_type_1.operatorarraytype1 property)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.num_qubits", false]], "num_qubits (pauliarray.pauli.operator_array_type_2.operatorarraytype2 property)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.num_qubits", false]], "num_qubits (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.num_qubits", false]], "num_qubits (pauliarray.pauli.weighted_pauli_array.weightedpauliarray property)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.num_qubits", false]], "num_terms (pauliarray.pauli.operator.operator property)": [[5, "pauliarray.pauli.operator.Operator.num_terms", false]], "num_terms (pauliarray.pauli.operator_array_type_1.operatorarraytype1 property)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.num_terms", false]], "occupation_operators() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.occupation_operators", false]], "one_body_operator_from_array() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.one_body_operator_from_array", false]], "one_body_operator_from_sparse() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.one_body_operator_from_sparse", false]], "operator (class in pauliarray.pauli.operator)": [[5, "pauliarray.pauli.operator.Operator", false]], "operator_array_from_sparse_pauli_list() (in module pauliarray.conversion.qiskit)": [[3, "pauliarray.conversion.qiskit.operator_array_from_sparse_pauli_list", false]], "operator_array_to_pauli_sentence_list() (in module pauliarray.conversion.pennylane)": [[3, "pauliarray.conversion.pennylane.operator_array_to_pauli_sentence_list", false]], "operator_array_to_sparse_pauli_list() (in module pauliarray.conversion.qiskit)": [[3, "pauliarray.conversion.qiskit.operator_array_to_sparse_pauli_list", false]], "operator_from_sparse_pauli() (in module pauliarray.conversion.qiskit)": [[3, "pauliarray.conversion.qiskit.operator_from_sparse_pauli", false]], "operator_to_sparse_pauli() (in module pauliarray.conversion.qiskit)": [[3, "pauliarray.conversion.qiskit.operator_to_sparse_pauli", false]], "operatorarraytype1 (class in pauliarray.pauli.operator_array_type_1)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1", false]], "operatorarraytype2 (class in pauliarray.pauli.operator_array_type_2)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2", false]], "orthogonal_basis() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.orthogonal_basis", false]], "orthogonal_complement() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.orthogonal_complement", false]], "orthogonal_complement() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.orthogonal_complement", false]], "parity (class in pauliarray.mapping.fermion)": [[4, "pauliarray.mapping.fermion.Parity", false]], "parity_matrix (pauliarray.mapping.fermion.fermionmapping property)": [[4, "pauliarray.mapping.fermion.FermionMapping.parity_matrix", false]], "pauli_array_from_pauli_list() (in module pauliarray.conversion.qiskit)": [[3, "pauliarray.conversion.qiskit.pauli_array_from_pauli_list", false]], "pauli_array_to_pauli_list() (in module pauliarray.conversion.qiskit)": [[3, "pauliarray.conversion.qiskit.pauli_array_to_pauli_list", false]], "pauliarray": [[1, "module-pauliarray", false]], "pauliarray (class in pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.PauliArray", false]], "pauliarray.binary": [[2, "module-pauliarray.binary", false]], "pauliarray.binary.bit_operations": [[2, "module-pauliarray.binary.bit_operations", false]], "pauliarray.binary.symplectic": [[2, "module-pauliarray.binary.symplectic", false]], "pauliarray.conversion": [[3, "module-pauliarray.conversion", false]], "pauliarray.conversion.openfermion": [[3, "module-pauliarray.conversion.openfermion", false]], "pauliarray.conversion.pennylane": [[3, "module-pauliarray.conversion.pennylane", false]], "pauliarray.conversion.qiskit": [[3, "module-pauliarray.conversion.qiskit", false]], "pauliarray.mapping": [[4, "module-pauliarray.mapping", false]], "pauliarray.mapping.fermion": [[4, "module-pauliarray.mapping.fermion", false]], "pauliarray.pauli": [[5, "module-pauliarray.pauli", false]], "pauliarray.pauli.operator": [[5, "module-pauliarray.pauli.operator", false]], "pauliarray.pauli.operator_array_type_1": [[5, "module-pauliarray.pauli.operator_array_type_1", false]], "pauliarray.pauli.operator_array_type_2": [[5, "module-pauliarray.pauli.operator_array_type_2", false]], "pauliarray.pauli.pauli_array": [[5, "module-pauliarray.pauli.pauli_array", false]], "pauliarray.pauli.weighted_pauli_array": [[5, "module-pauliarray.pauli.weighted_pauli_array", false]], "pauliarray.utils": [[6, "module-pauliarray.utils", false]], "pauliarray.utils.array_operations": [[6, "module-pauliarray.utils.array_operations", false]], "pauliarray.utils.pauli_array_library": [[6, "module-pauliarray.utils.pauli_array_library", false]], "paulis (pauliarray.pauli.operator.operator property)": [[5, "pauliarray.pauli.operator.Operator.paulis", false]], "paulis (pauliarray.pauli.operator_array_type_1.operatorarraytype1 property)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.paulis", false]], "paulis (pauliarray.pauli.operator_array_type_2.operatorarraytype2 property)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.paulis", false]], "paulis (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.paulis", false]], "paulis (pauliarray.pauli.weighted_pauli_array.weightedpauliarray property)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.paulis", false]], "power() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.power", false]], "qubit_operator_to_operator() (in module pauliarray.conversion.openfermion)": [[3, "pauliarray.conversion.openfermion.qubit_operator_to_operator", false]], "qubit_operators_to_operator_array() (in module pauliarray.conversion.openfermion)": [[3, "pauliarray.conversion.openfermion.qubit_operators_to_operator_array", false]], "random() (pauliarray.pauli.pauli_array.pauliarray class method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.random", false]], "random() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray class method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.random", false]], "rank() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.rank", false]], "remove() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.remove", false]], "remove() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.remove", false]], "remove_small_weights() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.remove_small_weights", false]], "remove_small_weights() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.remove_small_weights", false]], "remove_small_weights() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.remove_small_weights", false]], "remove_unused_basis_paulis() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.remove_unused_basis_paulis", false]], "reorder_qubits() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.reorder_qubits", false]], "reshape() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.reshape", false]], "reshape() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.reshape", false]], "reshape() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.reshape", false]], "reshape() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.reshape", false]], "row_echelon() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.row_echelon", false]], "row_space() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.row_space", false]], "s() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.s", false]], "s() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.s", false]], "s() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.s", false]], "s() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.s", false]], "shape (pauliarray.pauli.operator_array_type_1.operatorarraytype1 property)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.shape", false]], "shape (pauliarray.pauli.operator_array_type_2.operatorarraytype2 property)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.shape", false]], "shape (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.shape", false]], "shape (pauliarray.pauli.weighted_pauli_array.weightedpauliarray property)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.shape", false]], "simplify() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.simplify", false]], "size (pauliarray.pauli.operator_array_type_1.operatorarraytype1 property)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.size", false]], "size (pauliarray.pauli.operator_array_type_2.operatorarraytype2 property)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.size", false]], "size (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.size", false]], "size (pauliarray.pauli.weighted_pauli_array.weightedpauliarray property)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.size", false]], "sort_paulis() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.sort_paulis", false]], "sparse_matrix_from_zx_ints() (pauliarray.pauli.pauli_array.pauliarray static method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.sparse_matrix_from_zx_ints", false]], "split_zx_strings() (in module pauliarray.binary.symplectic)": [[2, "pauliarray.binary.symplectic.split_zx_strings", false]], "squeeze() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.squeeze", false]], "squeeze() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.squeeze", false]], "squeeze() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.squeeze", false]], "strings_to_ints() (in module pauliarray.binary.bit_operations)": [[2, "pauliarray.binary.bit_operations.strings_to_ints", false]], "sum() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.sum", false]], "sum() (pauliarray.pauli.operator_array_type_2.operatorarraytype2 method)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.sum", false]], "sum() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.sum", false]], "swapaxes() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.swapaxes", false]], "swapaxes() (in module pauliarray.pauli.weighted_pauli_array)": [[5, "pauliarray.pauli.weighted_pauli_array.swapaxes", false]], "take_qubits() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.take_qubits", false]], "take_qubits() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.take_qubits", false]], "take_qubits() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.take_qubits", false]], "tensor() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.tensor", false]], "tensor() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.tensor", false]], "tensor() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.tensor", false]], "tensor_operator() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.tensor_operator", false]], "tensor_pauli_array() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.tensor_pauli_array", false]], "tensor_weighted_pauli_array() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.tensor_weighted_pauli_array", false]], "test_add_pauli_array() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_add_pauli_array", false]], "test_anticommutator() (tests.test_pauli_array.testpauliarrayfunc method)": [[7, "tests.test_pauli_array.TestPauliArrayFunc.test_anticommutator", false]], "test_anticommutator() (tests.test_weighted_pauli_array.testweightedpauliarrayfunc method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArrayFunc.test_anticommutator", false]], "test_argsort() (tests.test_pauli_array.testpauliarrayfunc method)": [[7, "tests.test_pauli_array.TestPauliArrayFunc.test_argsort", false]], "test_assemble_qubit_hamiltonian_from_sparses() (tests.test_mapping.testjordanwignermapping method)": [[7, "tests.test_mapping.TestJordanWignerMapping.test_assemble_qubit_hamiltonian_from_sparses", false]], "test_bitwisecommute_with() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_bitwisecommute_with", false]], "test_broadcast_to() (tests.test_pauli_array.testpauliarrayfunc method)": [[7, "tests.test_pauli_array.TestPauliArrayFunc.test_broadcast_to", false]], "test_clifford_conjugate() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_clifford_conjugate", false]], "test_clifford_conjugate_pauli_array() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_clifford_conjugate_pauli_array", false]], "test_combine_basis_paulis() (tests.test_operator_array_type_2.testoperatorarraytype2 method)": [[7, "tests.test_operator_array_type_2.TestOperatorArrayType2.test_combine_basis_paulis", false]], "test_combine_repeated_terms() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_combine_repeated_terms", false]], "test_commutator() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_commutator", false]], "test_commutator() (tests.test_operator_array_type_2.testoperatorarraytype2 method)": [[7, "tests.test_operator_array_type_2.TestOperatorArrayType2.test_commutator", false]], "test_commutator() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_commutator", false]], "test_commutator() (tests.test_pauli_array.testpauliarrayfunc method)": [[7, "tests.test_pauli_array.TestPauliArrayFunc.test_commutator", false]], "test_commutator() (tests.test_weighted_pauli_array.testweightedpauliarrayfunc method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArrayFunc.test_commutator", false]], "test_commute_with() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_commute_with", false]], "test_compose() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_compose", false]], "test_compose_pauli_array() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_compose_pauli_array", false]], "test_concatenate() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_concatenate", false]], "test_concatenate() (tests.test_operator_array_type_2.testoperatorarraytype2 method)": [[7, "tests.test_operator_array_type_2.TestOperatorArrayType2.test_concatenate", false]], "test_concatenate() (tests.test_pauli_array.testpauliarrayfunc method)": [[7, "tests.test_pauli_array.TestPauliArrayFunc.test_concatenate", false]], "test_concatenate() (tests.test_weighted_pauli_array.testweightedpauliarrayfunc method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArrayFunc.test_concatenate", false]], "test_creation_annihilation_operators() (tests.test_mapping.testjordanwignermapping method)": [[7, "tests.test_mapping.TestJordanWignerMapping.test_creation_annihilation_operators", false]], "test_cx() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_cx", false]], "test_cx() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_cx", false]], "test_cz() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_cz", false]], "test_cz() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_cz", false]], "test_dot() (tests.test_bits_operations.testbitsoperations method)": [[7, "tests.test_bits_operations.TestBitsOperations.test_dot", false]], "test_dot() (tests.test_symplectic.testsymplecticbitsoperations method)": [[7, "tests.test_symplectic.TestSymplecticBitsOperations.test_dot", false]], "test_eq() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_eq", false]], "test_eq() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_eq", false]], "test_equals() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_equals", false]], "test_expand_dims() (tests.test_pauli_array.testpauliarrayfunc method)": [[7, "tests.test_pauli_array.TestPauliArrayFunc.test_expand_dims", false]], "test_extract() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_extract", false]], "test_fast_flat_unique() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_fast_flat_unique", false]], "test_from_labels() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_from_labels", false]], "test_from_pauli_array() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_from_pauli_array", false]], "test_from_weights_and_labels() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_from_weights_and_labels", false]], "test_from_weights_and_labels() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_from_weights_and_labels", false]], "test_generators() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_generators", false]], "test_generators_with_map() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_generators_with_map", false]], "test_get_item() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_get_item", false]], "test_get_item() (tests.test_operator_array_type_2.testoperatorarraytype2 method)": [[7, "tests.test_operator_array_type_2.TestOperatorArrayType2.test_get_item", false]], "test_getitem() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_getitem", false]], "test_gram_schmidt_orthogonalization() (tests.test_symplectic.testsymplecticbitsoperations method)": [[7, "tests.test_symplectic.TestSymplecticBitsOperations.test_gram_schmidt_orthogonalization", false]], "test_h() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_h", false]], "test_h() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_h", false]], "test_init() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_init", false]], "test_init() (tests.test_operator_array_type_2.testoperatorarraytype2 method)": [[7, "tests.test_operator_array_type_2.TestOperatorArrayType2.test_init", false]], "test_inspect() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_inspect", false]], "test_intersection() (tests.test_bits_operations.testbitsoperations method)": [[7, "tests.test_bits_operations.TestBitsOperations.test_intersection", false]], "test_isotropic_subspace() (tests.test_symplectic.testsymplecticbitsoperations method)": [[7, "tests.test_symplectic.TestSymplecticBitsOperations.test_isotropic_subspace", false]], "test_kernel() (tests.test_bits_operations.testbitsoperations method)": [[7, "tests.test_bits_operations.TestBitsOperations.test_kernel", false]], "test_kernel_2() (tests.test_bits_operations.testbitsoperations method)": [[7, "tests.test_bits_operations.TestBitsOperations.test_kernel_2", false]], "test_majoranas() (tests.test_mapping.testjordanwignermapping method)": [[7, "tests.test_mapping.TestJordanWignerMapping.test_majoranas", false]], "test_matrix_from_zx_ints() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_matrix_from_zx_ints", false]], "test_mul_weights() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_mul_weights", false]], "test_mul_weights() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_mul_weights", false]], "test_occupation_operators() (tests.test_mapping.testjordanwignermapping method)": [[7, "tests.test_mapping.TestJordanWignerMapping.test_occupation_operators", false]], "test_one_body_to_pauli_operator_from_sparse() (tests.test_mapping.testjordanwignermapping method)": [[7, "tests.test_mapping.TestJordanWignerMapping.test_one_body_to_pauli_operator_from_sparse", false]], "test_one_body_to_pauli_operator_from_tensor() (tests.test_mapping.testjordanwignermapping method)": [[7, "tests.test_mapping.TestJordanWignerMapping.test_one_body_to_pauli_operator_from_tensor", false]], "test_operator_from_sparse_pauli() (tests.test_conversion.testpaulifromqiskit method)": [[7, "tests.test_conversion.TestPauliFromQiskit.test_operator_from_sparse_pauli", false]], "test_operator_to_sparse_pauli() (tests.test_conversion.testpaulifromqiskit method)": [[7, "tests.test_conversion.TestPauliFromQiskit.test_operator_to_sparse_pauli", false]], "test_orthogonal_complement() (tests.test_symplectic.testsymplecticbitsoperations method)": [[7, "tests.test_symplectic.TestSymplecticBitsOperations.test_orthogonal_complement", false]], "test_pauli_array_from_pauli_list() (tests.test_conversion.testpaulifromqiskit method)": [[7, "tests.test_conversion.TestPauliFromQiskit.test_pauli_array_from_pauli_list", false]], "test_pauli_array_to_pauli_list() (tests.test_conversion.testpaulifromqiskit method)": [[7, "tests.test_conversion.TestPauliFromQiskit.test_pauli_array_to_pauli_list", false]], "test_power() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_power", false]], "test_rank() (tests.test_bits_operations.testbitsoperations method)": [[7, "tests.test_bits_operations.TestBitsOperations.test_rank", false]], "test_remove_small_weights() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_remove_small_weights", false]], "test_remove_small_weights() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_remove_small_weights", false]], "test_remove_small_weights() (tests.test_operator_array_type_2.testoperatorarraytype2 method)": [[7, "tests.test_operator_array_type_2.TestOperatorArrayType2.test_remove_small_weights", false]], "test_remove_unused_basis_paulis() (tests.test_operator_array_type_2.testoperatorarraytype2 method)": [[7, "tests.test_operator_array_type_2.TestOperatorArrayType2.test_remove_unused_basis_paulis", false]], "test_reorder_qubits() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_reorder_qubits", false]], "test_row_echelon() (tests.test_bits_operations.testbitsoperations method)": [[7, "tests.test_bits_operations.TestBitsOperations.test_row_echelon", false]], "test_s() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_s", false]], "test_s() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_s", false]], "test_set_item() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_set_item", false]], "test_str() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_str", false]], "test_str() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_str", false]], "test_str() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_str", false]], "test_sum() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_sum", false]], "test_swapaxes() (tests.test_pauli_array.testpauliarrayfunc method)": [[7, "tests.test_pauli_array.TestPauliArrayFunc.test_swapaxes", false]], "test_to_labels() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_to_labels", false]], "test_to_matrices() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_to_matrices", false]], "test_to_npz_from_npz() (tests.test_operator.testoperator method)": [[7, "tests.test_operator.TestOperator.test_to_npz_from_npz", false]], "test_to_npz_from_npz() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_to_npz_from_npz", false]], "test_traces() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_traces", false]], "test_two_body_to_pauli_operator_from_sparse() (tests.test_mapping.testjordanwignermapping method)": [[7, "tests.test_mapping.TestJordanWignerMapping.test_two_body_to_pauli_operator_from_sparse", false]], "test_two_body_to_pauli_operator_from_tensor() (tests.test_mapping.testjordanwignermapping method)": [[7, "tests.test_mapping.TestJordanWignerMapping.test_two_body_to_pauli_operator_from_tensor", false]], "test_unique() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_unique", false]], "test_weighted_pauli_array_from_pauli_list() (tests.test_conversion.testpaulifromqiskit method)": [[7, "tests.test_conversion.TestPauliFromQiskit.test_weighted_pauli_array_from_pauli_list", false]], "test_x() (tests.test_operator_array_type_1.testoperatorarraytype1 method)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1.test_x", false]], "test_x() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_x", false]], "test_x() (tests.test_weighted_pauli_array.testweightedpauliarray method)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray.test_x", false]], "test_z_string_x_string_to_label() (tests.test_pauli_array.testpauliarray method)": [[7, "tests.test_pauli_array.TestPauliArray.test_z_string_x_string_to_label", false]], "testbitsoperations (class in tests.test_bits_operations)": [[7, "tests.test_bits_operations.TestBitsOperations", false]], "testjordanwignermapping (class in tests.test_mapping)": [[7, "tests.test_mapping.TestJordanWignerMapping", false]], "testoperator (class in tests.test_operator)": [[7, "tests.test_operator.TestOperator", false]], "testoperatorarraytype1 (class in tests.test_operator_array_type_1)": [[7, "tests.test_operator_array_type_1.TestOperatorArrayType1", false]], "testoperatorarraytype2 (class in tests.test_operator_array_type_2)": [[7, "tests.test_operator_array_type_2.TestOperatorArrayType2", false]], "testpauliarray (class in tests.test_pauli_array)": [[7, "tests.test_pauli_array.TestPauliArray", false]], "testpauliarrayfunc (class in tests.test_pauli_array)": [[7, "tests.test_pauli_array.TestPauliArrayFunc", false]], "testpaulifromqiskit (class in tests.test_conversion)": [[7, "tests.test_conversion.TestPauliFromQiskit", false]], "tests": [[7, "module-tests", false]], "tests.test_bits_operations": [[7, "module-tests.test_bits_operations", false]], "tests.test_conversion": [[7, "module-tests.test_conversion", false]], "tests.test_mapping": [[7, "module-tests.test_mapping", false]], "tests.test_operator": [[7, "module-tests.test_operator", false]], "tests.test_operator_array_type_1": [[7, "module-tests.test_operator_array_type_1", false]], "tests.test_operator_array_type_2": [[7, "module-tests.test_operator_array_type_2", false]], "tests.test_pauli_array": [[7, "module-tests.test_pauli_array", false]], "tests.test_symplectic": [[7, "module-tests.test_symplectic", false]], "tests.test_weighted_pauli_array": [[7, "module-tests.test_weighted_pauli_array", false]], "testsymplecticbitsoperations (class in tests.test_symplectic)": [[7, "tests.test_symplectic.TestSymplecticBitsOperations", false]], "testweightedpauliarray (class in tests.test_weighted_pauli_array)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArray", false]], "testweightedpauliarrayfunc (class in tests.test_weighted_pauli_array)": [[7, "tests.test_weighted_pauli_array.TestWeightedPauliArrayFunc", false]], "to_labels() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.to_labels", false]], "to_matrices() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.to_matrices", false]], "to_matrices() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.to_matrices", false]], "to_matrix() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.to_matrix", false]], "to_npz() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.to_npz", false]], "to_npz() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.to_npz", false]], "trace() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.trace", false]], "traces() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.traces", false]], "two_body_operator_from_array() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.two_body_operator_from_array", false]], "two_body_operator_from_sparse() (pauliarray.mapping.fermion.fermionmapping method)": [[4, "pauliarray.mapping.fermion.FermionMapping.two_body_operator_from_sparse", false]], "unique() (in module pauliarray.pauli.pauli_array)": [[5, "pauliarray.pauli.pauli_array.unique", false]], "update_weights() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.update_weights", false]], "update_weights() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.update_weights", false]], "update_weights_from_other() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.update_weights_from_other", false]], "update_weights_from_other() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.update_weights_from_other", false]], "weighted_pauli_array_from_pauli_list() (in module pauliarray.conversion.qiskit)": [[3, "pauliarray.conversion.qiskit.weighted_pauli_array_from_pauli_list", false]], "weightedpauliarray (class in pauliarray.pauli.weighted_pauli_array)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray", false]], "weights (pauliarray.pauli.operator.operator property)": [[5, "pauliarray.pauli.operator.Operator.weights", false]], "weights (pauliarray.pauli.operator_array_type_1.operatorarraytype1 property)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.weights", false]], "weights (pauliarray.pauli.operator_array_type_2.operatorarraytype2 property)": [[5, "pauliarray.pauli.operator_array_type_2.OperatorArrayType2.weights", false]], "weights (pauliarray.pauli.weighted_pauli_array.weightedpauliarray property)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.weights", false]], "wpaulis (pauliarray.pauli.operator.operator property)": [[5, "pauliarray.pauli.operator.Operator.wpaulis", false]], "wpaulis (pauliarray.pauli.operator_array_type_1.operatorarraytype1 property)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.wpaulis", false]], "x() (pauliarray.pauli.operator.operator method)": [[5, "pauliarray.pauli.operator.Operator.x", false]], "x() (pauliarray.pauli.operator_array_type_1.operatorarraytype1 method)": [[5, "pauliarray.pauli.operator_array_type_1.OperatorArrayType1.x", false]], "x() (pauliarray.pauli.pauli_array.pauliarray method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.x", false]], "x() (pauliarray.pauli.weighted_pauli_array.weightedpauliarray method)": [[5, "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray.x", false]], "x_strings (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.x_strings", false]], "xz_strings (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.xz_strings", false]], "z_string_x_string_to_label() (pauliarray.pauli.pauli_array.pauliarray static method)": [[5, "pauliarray.pauli.pauli_array.PauliArray.z_string_x_string_to_label", false]], "z_strings (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.z_strings", false]], "zx_strings (pauliarray.pauli.pauli_array.pauliarray property)": [[5, "pauliarray.pauli.pauli_array.PauliArray.zx_strings", false]]}, "objects": {"": [[1, 0, 0, "-", "pauliarray"], [7, 0, 0, "-", "tests"]], "pauliarray": [[2, 0, 0, "-", "binary"], [3, 0, 0, "-", "conversion"], [4, 0, 0, "-", "mapping"], [5, 0, 0, "-", "pauli"], [6, 0, 0, "-", "utils"]], "pauliarray.binary": [[2, 0, 0, "-", "bit_operations"], [2, 0, 0, "-", "symplectic"]], "pauliarray.binary.bit_operations": [[2, 1, 1, "", "add"], [2, 1, 1, "", "bit_sum"], [2, 1, 1, "", "dot"], [2, 1, 1, "", "intersection"], [2, 1, 1, "", "intersection_row_space"], [2, 1, 1, "", "inv"], [2, 1, 1, "", "is_orthogonal"], [2, 1, 1, "", "kernel"], [2, 1, 1, "", "matmul"], [2, 1, 1, "", "orthogonal_basis"], [2, 1, 1, "", "orthogonal_complement"], [2, 1, 1, "", "rank"], [2, 1, 1, "", "row_echelon"], [2, 1, 1, "", "row_space"], [2, 1, 1, "", "strings_to_ints"]], "pauliarray.binary.symplectic": [[2, 1, 1, "", "coisotropic_subspace"], [2, 1, 1, "", "conjugate_subspace"], [2, 1, 1, "", "dot"], [2, 1, 1, "", "flip_zx"], [2, 1, 1, "", "gram_schmidt_orthogonalization"], [2, 1, 1, "", "is_coisotropic"], [2, 1, 1, "", "is_isotropic"], [2, 1, 1, "", "is_lagrangian"], [2, 1, 1, "", "is_orthogonal"], [2, 1, 1, "", "isotropic_subspace"], [2, 1, 1, "", "lagrangian_subspace"], [2, 1, 1, "", "merge_zx_strings"], [2, 1, 1, "", "orthogonal_complement"], [2, 1, 1, "", "split_zx_strings"]], "pauliarray.conversion": [[3, 0, 0, "-", "openfermion"], [3, 0, 0, "-", "pennylane"], [3, 0, 0, "-", "qiskit"]], "pauliarray.conversion.openfermion": [[3, 1, 1, "", "labels_and_weights_from_qubit_operator"], [3, 1, 1, "", "qubit_operator_to_operator"], [3, 1, 1, "", "qubit_operators_to_operator_array"]], "pauliarray.conversion.pennylane": [[3, 1, 1, "", "operator_array_to_pauli_sentence_list"]], "pauliarray.conversion.qiskit": [[3, 1, 1, "", "extract_fermionic_op"], [3, 1, 1, "", "operator_array_from_sparse_pauli_list"], [3, 1, 1, "", "operator_array_to_sparse_pauli_list"], [3, 1, 1, "", "operator_from_sparse_pauli"], [3, 1, 1, "", "operator_to_sparse_pauli"], [3, 1, 1, "", "pauli_array_from_pauli_list"], [3, 1, 1, "", "pauli_array_to_pauli_list"], [3, 1, 1, "", "weighted_pauli_array_from_pauli_list"]], "pauliarray.mapping": [[4, 0, 0, "-", "fermion"]], "pauliarray.mapping.fermion": [[4, 2, 1, "", "BravyiKitaev"], [4, 2, 1, "", "FermionMapping"], [4, 2, 1, "", "JordanWigner"], [4, 2, 1, "", "Parity"]], "pauliarray.mapping.fermion.BravyiKitaev": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "_build_bravyi_kitaev_mapping_matrix"]], "pauliarray.mapping.fermion.FermionMapping": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "_flip_factors"], [4, 3, 1, "", "_flip_operators"], [4, 4, 1, "", "_heavyside_matrix"], [4, 4, 1, "", "_mapping_matrix_inv"], [4, 4, 1, "", "_parity_matrix"], [4, 3, 1, "", "_update_factors"], [4, 3, 1, "", "_update_operators"], [4, 3, 1, "", "_update_operators_2"], [4, 3, 1, "", "_update_operators_4"], [4, 3, 1, "", "assemble_creation_annihilation_operators"], [4, 3, 1, "", "assemble_one_body_operator_array"], [4, 3, 1, "", "assemble_qubit_hamiltonian_from_arrays"], [4, 3, 1, "", "assemble_qubit_hamiltonian_from_sparses"], [4, 3, 1, "", "assemble_two_body_operator_array"], [4, 5, 1, "", "heavyside_matrix"], [4, 3, 1, "", "majoranas"], [4, 4, 1, "", "mapping_matrix"], [4, 5, 1, "", "mapping_matrix_inv"], [4, 4, 1, "", "name"], [4, 5, 1, "", "num_qubits"], [4, 3, 1, "", "occupation_operators"], [4, 3, 1, "", "one_body_operator_from_array"], [4, 3, 1, "", "one_body_operator_from_sparse"], [4, 5, 1, "", "parity_matrix"], [4, 3, 1, "", "two_body_operator_from_array"], [4, 3, 1, "", "two_body_operator_from_sparse"]], "pauliarray.mapping.fermion.JordanWigner": [[4, 3, 1, "", "__init__"]], "pauliarray.mapping.fermion.Parity": [[4, 3, 1, "", "__init__"]], "pauliarray.pauli": [[5, 0, 0, "-", "operator"], [5, 0, 0, "-", "operator_array_type_1"], [5, 0, 0, "-", "operator_array_type_2"], [5, 0, 0, "-", "pauli_array"], [5, 0, 0, "-", "weighted_pauli_array"]], "pauliarray.pauli.operator": [[5, 2, 1, "", "Operator"], [5, 1, 1, "", "anticommutator"], [5, 1, 1, "", "commutator"]], "pauliarray.pauli.operator.Operator": [[5, 3, 1, "", "__add__"], [5, 3, 1, "", "__eq__"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "__mul__"], [5, 3, 1, "", "__rmul__"], [5, 3, 1, "", "__str__"], [5, 3, 1, "", "add_operator"], [5, 3, 1, "", "add_scalar"], [5, 3, 1, "", "adjoint"], [5, 3, 1, "", "clifford_conjugate"], [5, 3, 1, "", "clifford_conjugate_pauli_array"], [5, 3, 1, "", "clifford_conjugate_pauli_array_old"], [5, 3, 1, "", "combine_repeated_terms"], [5, 3, 1, "", "compose"], [5, 3, 1, "", "compose_operator"], [5, 3, 1, "", "compress_qubits"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "covariances_from_paulis"], [5, 3, 1, "", "cx"], [5, 3, 1, "", "cz"], [5, 3, 1, "", "empty"], [5, 3, 1, "", "expectation_values_from_paulis"], [5, 3, 1, "", "filter_weights"], [5, 3, 1, "", "from_labels_and_weights"], [5, 3, 1, "", "from_matrix"], [5, 3, 1, "", "from_npz"], [5, 3, 1, "", "from_paulis"], [5, 3, 1, "", "from_paulis_and_weights"], [5, 3, 1, "", "h"], [5, 3, 1, "", "identity"], [5, 3, 1, "", "inspect"], [5, 3, 1, "", "is_clifford"], [5, 3, 1, "", "is_scalar"], [5, 3, 1, "", "is_unitary"], [5, 3, 1, "", "mul_scalar"], [5, 5, 1, "", "num_qubits"], [5, 5, 1, "", "num_terms"], [5, 5, 1, "", "paulis"], [5, 3, 1, "", "power"], [5, 3, 1, "", "remove_small_weights"], [5, 3, 1, "", "s"], [5, 3, 1, "", "simplify"], [5, 3, 1, "", "sort_paulis"], [5, 3, 1, "", "take_qubits"], [5, 3, 1, "", "tensor"], [5, 3, 1, "", "tensor_operator"], [5, 3, 1, "", "to_matrix"], [5, 3, 1, "", "to_npz"], [5, 3, 1, "", "trace"], [5, 3, 1, "", "update_weights"], [5, 3, 1, "", "update_weights_from_other"], [5, 5, 1, "", "weights"], [5, 5, 1, "", "wpaulis"], [5, 3, 1, "", "x"]], "pauliarray.pauli.operator_array_type_1": [[5, 2, 1, "", "OperatorArrayType1"], [5, 1, 1, "", "anticommutator"], [5, 1, 1, "", "commutator"], [5, 1, 1, "", "concatenate"]], "pauliarray.pauli.operator_array_type_1.OperatorArrayType1": [[5, 3, 1, "", "__eq__"], [5, 3, 1, "", "__getitem__"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "__mul__"], [5, 3, 1, "", "__rmul__"], [5, 3, 1, "", "__str__"], [5, 3, 1, "", "_mul"], [5, 3, 1, "", "_operator_ndarray_to_wpaulis"], [5, 3, 1, "", "add"], [5, 3, 1, "", "add_operator_array_type_1"], [5, 3, 1, "", "add_scalar"], [5, 3, 1, "", "adjoint"], [5, 3, 1, "", "clifford_conjugate"], [5, 3, 1, "", "combine_repeated_terms"], [5, 3, 1, "", "compose"], [5, 3, 1, "", "compose_operator_array_type_1"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "covariances_from_paulis"], [5, 3, 1, "", "cx"], [5, 3, 1, "", "cz"], [5, 3, 1, "", "expectation_values_from_paulis"], [5, 3, 1, "", "filter_weights"], [5, 3, 1, "", "flatten"], [5, 3, 1, "", "from_operator_list"], [5, 3, 1, "", "from_operator_ndarray"], [5, 3, 1, "", "from_pauli_array"], [5, 3, 1, "", "from_weighted_pauli_array"], [5, 3, 1, "", "get_operator"], [5, 3, 1, "", "h"], [5, 3, 1, "", "inspect"], [5, 3, 1, "", "mul_weights"], [5, 5, 1, "", "ndim"], [5, 5, 1, "", "num_qubits"], [5, 5, 1, "", "num_terms"], [5, 5, 1, "", "paulis"], [5, 3, 1, "", "remove_small_weights"], [5, 3, 1, "", "reshape"], [5, 3, 1, "", "s"], [5, 5, 1, "", "shape"], [5, 5, 1, "", "size"], [5, 3, 1, "", "sum"], [5, 5, 1, "", "weights"], [5, 5, 1, "", "wpaulis"], [5, 3, 1, "", "x"]], "pauliarray.pauli.operator_array_type_2": [[5, 2, 1, "", "OperatorArrayType2"], [5, 1, 1, "", "commutator"], [5, 1, 1, "", "concatenate"]], "pauliarray.pauli.operator_array_type_2.OperatorArrayType2": [[5, 3, 1, "", "__getitem__"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "__mul__"], [5, 3, 1, "", "__rmul__"], [5, 3, 1, "", "_mul"], [5, 3, 1, "", "add"], [5, 3, 1, "", "add_operator_array_type_2"], [5, 5, 1, "", "basis_paulis"], [5, 3, 1, "", "build_basis_paulis"], [5, 3, 1, "", "combine_basis_paulis"], [5, 3, 1, "", "compose"], [5, 3, 1, "", "compose_operator_array_type_2"], [5, 3, 1, "", "covariances_from_paulis"], [5, 3, 1, "", "expectation_values_from_paulis"], [5, 3, 1, "", "filter_weights"], [5, 3, 1, "", "flatten"], [5, 3, 1, "", "from_operator"], [5, 3, 1, "", "from_operator_list"], [5, 3, 1, "", "from_operator_ndarray"], [5, 3, 1, "", "from_pauli_array"], [5, 3, 1, "", "get_operator"], [5, 3, 1, "", "mul_weights"], [5, 5, 1, "", "ndim"], [5, 5, 1, "", "num_qubits"], [5, 5, 1, "", "paulis"], [5, 3, 1, "", "remove_small_weights"], [5, 3, 1, "", "remove_unused_basis_paulis"], [5, 3, 1, "", "reshape"], [5, 5, 1, "", "shape"], [5, 5, 1, "", "size"], [5, 3, 1, "", "squeeze"], [5, 3, 1, "", "sum"], [5, 5, 1, "", "weights"]], "pauliarray.pauli.pauli_array": [[5, 2, 1, "", "PauliArray"], [5, 1, 1, "", "anticommutator"], [5, 1, 1, "", "argsort"], [5, 1, 1, "", "broadcast_to"], [5, 1, 1, "", "commutator"], [5, 1, 1, "", "commutator2"], [5, 1, 1, "", "concatenate"], [5, 1, 1, "", "expand_dims"], [5, 1, 1, "", "fast_flat_unique"], [5, 1, 1, "", "moveaxis"], [5, 1, 1, "", "swapaxes"], [5, 1, 1, "", "unique"]], "pauliarray.pauli.pauli_array.PauliArray": [[5, 3, 1, "", "__eq__"], [5, 3, 1, "", "add_pauli_array"], [5, 3, 1, "", "bitwise_commute_with"], [5, 3, 1, "", "clifford_conjugate"], [5, 3, 1, "", "commute_with"], [5, 3, 1, "", "compose"], [5, 3, 1, "", "compose_pauli_array"], [5, 3, 1, "", "compress_qubits"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "covariances_from_paulis"], [5, 3, 1, "", "cx"], [5, 3, 1, "", "cz"], [5, 3, 1, "", "expectation_values_from_paulis"], [5, 3, 1, "", "extract"], [5, 3, 1, "", "flatten"], [5, 3, 1, "", "flip_zx"], [5, 3, 1, "", "from_labels"], [5, 3, 1, "", "from_zx_strings"], [5, 3, 1, "", "generators"], [5, 3, 1, "", "generators_with_map"], [5, 3, 1, "", "h"], [5, 3, 1, "", "identities"], [5, 3, 1, "", "inspect"], [5, 3, 1, "", "is_diagonal"], [5, 3, 1, "", "is_identity"], [5, 3, 1, "", "label_table_1d"], [5, 3, 1, "", "label_table_2d"], [5, 3, 1, "", "label_table_nd"], [5, 3, 1, "", "label_to_z_string_x_string"], [5, 3, 1, "", "labels_to_z_strings_x_strings"], [5, 3, 1, "", "matrix_from_zx_ints"], [5, 3, 1, "", "mul_weights"], [5, 5, 1, "", "ndim"], [5, 3, 1, "", "new"], [5, 5, 1, "", "num_ids"], [5, 5, 1, "", "num_non_ids"], [5, 5, 1, "", "num_qubits"], [5, 5, 1, "", "paulis"], [5, 3, 1, "", "random"], [5, 3, 1, "", "remove"], [5, 3, 1, "", "reorder_qubits"], [5, 3, 1, "", "reshape"], [5, 3, 1, "", "s"], [5, 5, 1, "", "shape"], [5, 5, 1, "", "size"], [5, 3, 1, "", "sparse_matrix_from_zx_ints"], [5, 3, 1, "", "squeeze"], [5, 3, 1, "", "sum"], [5, 3, 1, "", "take_qubits"], [5, 3, 1, "", "tensor"], [5, 3, 1, "", "tensor_pauli_array"], [5, 3, 1, "", "to_labels"], [5, 3, 1, "", "to_matrices"], [5, 3, 1, "", "traces"], [5, 3, 1, "", "x"], [5, 5, 1, "", "x_strings"], [5, 5, 1, "", "xz_strings"], [5, 3, 1, "", "z_string_x_string_to_label"], [5, 5, 1, "", "z_strings"], [5, 5, 1, "", "zx_strings"]], "pauliarray.pauli.weighted_pauli_array": [[5, 2, 1, "", "WeightedPauliArray"], [5, 1, 1, "", "anticommutator"], [5, 1, 1, "", "broadcast_to"], [5, 1, 1, "", "commutator"], [5, 1, 1, "", "concatenate"], [5, 1, 1, "", "expand_dims"], [5, 1, 1, "", "moveaxis"], [5, 1, 1, "", "swapaxes"]], "pauliarray.pauli.weighted_pauli_array.WeightedPauliArray": [[5, 3, 1, "", "__eq__"], [5, 3, 1, "", "add_weighted_pauli_array"], [5, 3, 1, "", "adjoint"], [5, 3, 1, "", "bitwise_commute_with"], [5, 3, 1, "", "clifford_conjugate"], [5, 3, 1, "", "commute_with"], [5, 3, 1, "", "compose"], [5, 3, 1, "", "compose_weighted_pauli_array"], [5, 3, 1, "", "compress_qubits"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "covariances_from_paulis"], [5, 3, 1, "", "cx"], [5, 3, 1, "", "cz"], [5, 3, 1, "", "empty"], [5, 3, 1, "", "expectation_values_from_paulis"], [5, 3, 1, "", "extract"], [5, 3, 1, "", "flatten"], [5, 3, 1, "", "from_labels_and_weights"], [5, 3, 1, "", "from_npz"], [5, 3, 1, "", "from_paulis"], [5, 3, 1, "", "from_z_strings_and_x_strings_and_weights"], [5, 3, 1, "", "h"], [5, 3, 1, "", "inspect"], [5, 3, 1, "", "is_diagonal"], [5, 3, 1, "", "label_table_1d"], [5, 3, 1, "", "label_table_2d"], [5, 3, 1, "", "label_table_nd"], [5, 3, 1, "", "mul_weights"], [5, 5, 1, "", "ndim"], [5, 3, 1, "", "new"], [5, 5, 1, "", "num_qubits"], [5, 5, 1, "", "paulis"], [5, 3, 1, "", "random"], [5, 3, 1, "", "remove"], [5, 3, 1, "", "reshape"], [5, 3, 1, "", "s"], [5, 5, 1, "", "shape"], [5, 5, 1, "", "size"], [5, 3, 1, "", "squeeze"], [5, 3, 1, "", "take_qubits"], [5, 3, 1, "", "tensor"], [5, 3, 1, "", "tensor_weighted_pauli_array"], [5, 3, 1, "", "to_matrices"], [5, 3, 1, "", "to_npz"], [5, 3, 1, "", "update_weights"], [5, 3, 1, "", "update_weights_from_other"], [5, 5, 1, "", "weights"], [5, 3, 1, "", "x"]], "pauliarray.utils": [[6, 0, 0, "-", "array_operations"], [6, 0, 0, "-", "pauli_array_library"]], "pauliarray.utils.array_operations": [[6, 1, 1, "", "all_equal"], [6, 1, 1, "", "broadcast_shape"], [6, 1, 1, "", "broadcasted_index"], [6, 1, 1, "", "is_broadcastable"], [6, 1, 1, "", "is_concatenatable"], [6, 1, 1, "", "is_stackatable"], [6, 1, 1, "", "new_concatenate_shape"]], "pauliarray.utils.pauli_array_library": [[6, 1, 1, "", "gen_complete_pauli_array_basis"], [6, 1, 1, "", "gen_random_pauli_array"]], "tests": [[7, 0, 0, "-", "test_bits_operations"], [7, 0, 0, "-", "test_conversion"], [7, 0, 0, "-", "test_mapping"], [7, 0, 0, "-", "test_operator"], [7, 0, 0, "-", "test_operator_array_type_1"], [7, 0, 0, "-", "test_operator_array_type_2"], [7, 0, 0, "-", "test_pauli_array"], [7, 0, 0, "-", "test_symplectic"], [7, 0, 0, "-", "test_weighted_pauli_array"]], "tests.test_bits_operations": [[7, 2, 1, "", "TestBitsOperations"]], "tests.test_bits_operations.TestBitsOperations": [[7, 3, 1, "", "test_dot"], [7, 3, 1, "", "test_intersection"], [7, 3, 1, "", "test_kernel"], [7, 3, 1, "", "test_kernel_2"], [7, 3, 1, "", "test_rank"], [7, 3, 1, "", "test_row_echelon"]], "tests.test_conversion": [[7, 2, 1, "", "TestPauliFromQiskit"], [7, 1, 1, "", "get_qubit_operators_list"]], "tests.test_conversion.TestPauliFromQiskit": [[7, 3, 1, "", "test_operator_from_sparse_pauli"], [7, 3, 1, "", "test_operator_to_sparse_pauli"], [7, 3, 1, "", "test_pauli_array_from_pauli_list"], [7, 3, 1, "", "test_pauli_array_to_pauli_list"], [7, 3, 1, "", "test_weighted_pauli_array_from_pauli_list"]], "tests.test_mapping": [[7, 2, 1, "", "TestJordanWignerMapping"]], "tests.test_mapping.TestJordanWignerMapping": [[7, 3, 1, "", "test_assemble_qubit_hamiltonian_from_sparses"], [7, 3, 1, "", "test_creation_annihilation_operators"], [7, 3, 1, "", "test_majoranas"], [7, 3, 1, "", "test_occupation_operators"], [7, 3, 1, "", "test_one_body_to_pauli_operator_from_sparse"], [7, 3, 1, "", "test_one_body_to_pauli_operator_from_tensor"], [7, 3, 1, "", "test_two_body_to_pauli_operator_from_sparse"], [7, 3, 1, "", "test_two_body_to_pauli_operator_from_tensor"]], "tests.test_operator": [[7, 2, 1, "", "TestOperator"]], "tests.test_operator.TestOperator": [[7, 3, 1, "", "test_clifford_conjugate_pauli_array"], [7, 3, 1, "", "test_combine_repeated_terms"], [7, 3, 1, "", "test_compose"], [7, 3, 1, "", "test_eq"], [7, 3, 1, "", "test_equals"], [7, 3, 1, "", "test_from_weights_and_labels"], [7, 3, 1, "", "test_power"], [7, 3, 1, "", "test_remove_small_weights"], [7, 3, 1, "", "test_str"], [7, 3, 1, "", "test_to_npz_from_npz"]], "tests.test_operator_array_type_1": [[7, 2, 1, "", "TestOperatorArrayType1"]], "tests.test_operator_array_type_1.TestOperatorArrayType1": [[7, 3, 1, "", "test_commutator"], [7, 3, 1, "", "test_concatenate"], [7, 3, 1, "", "test_from_pauli_array"], [7, 3, 1, "", "test_get_item"], [7, 3, 1, "", "test_init"], [7, 3, 1, "", "test_mul_weights"], [7, 3, 1, "", "test_remove_small_weights"], [7, 3, 1, "", "test_sum"], [7, 3, 1, "", "test_x"]], "tests.test_operator_array_type_2": [[7, 2, 1, "", "TestOperatorArrayType2"]], "tests.test_operator_array_type_2.TestOperatorArrayType2": [[7, 3, 1, "", "test_combine_basis_paulis"], [7, 3, 1, "", "test_commutator"], [7, 3, 1, "", "test_concatenate"], [7, 3, 1, "", "test_get_item"], [7, 3, 1, "", "test_init"], [7, 3, 1, "", "test_remove_small_weights"], [7, 3, 1, "", "test_remove_unused_basis_paulis"]], "tests.test_pauli_array": [[7, 2, 1, "", "TestPauliArray"], [7, 2, 1, "", "TestPauliArrayFunc"]], "tests.test_pauli_array.TestPauliArray": [[7, 3, 1, "", "test_add_pauli_array"], [7, 3, 1, "", "test_bitwisecommute_with"], [7, 3, 1, "", "test_clifford_conjugate"], [7, 3, 1, "", "test_commutator"], [7, 3, 1, "", "test_commute_with"], [7, 3, 1, "", "test_compose_pauli_array"], [7, 3, 1, "", "test_cx"], [7, 3, 1, "", "test_cz"], [7, 3, 1, "", "test_eq"], [7, 3, 1, "", "test_fast_flat_unique"], [7, 3, 1, "", "test_from_labels"], [7, 3, 1, "", "test_generators"], [7, 3, 1, "", "test_generators_with_map"], [7, 3, 1, "", "test_getitem"], [7, 3, 1, "", "test_h"], [7, 3, 1, "", "test_inspect"], [7, 3, 1, "", "test_matrix_from_zx_ints"], [7, 3, 1, "", "test_mul_weights"], [7, 3, 1, "", "test_reorder_qubits"], [7, 3, 1, "", "test_s"], [7, 3, 1, "", "test_set_item"], [7, 3, 1, "", "test_str"], [7, 3, 1, "", "test_to_labels"], [7, 3, 1, "", "test_to_matrices"], [7, 3, 1, "", "test_traces"], [7, 3, 1, "", "test_unique"], [7, 3, 1, "", "test_x"], [7, 3, 1, "", "test_z_string_x_string_to_label"]], "tests.test_pauli_array.TestPauliArrayFunc": [[7, 3, 1, "", "test_anticommutator"], [7, 3, 1, "", "test_argsort"], [7, 3, 1, "", "test_broadcast_to"], [7, 3, 1, "", "test_commutator"], [7, 3, 1, "", "test_concatenate"], [7, 3, 1, "", "test_expand_dims"], [7, 3, 1, "", "test_swapaxes"]], "tests.test_symplectic": [[7, 2, 1, "", "TestSymplecticBitsOperations"]], "tests.test_symplectic.TestSymplecticBitsOperations": [[7, 3, 1, "", "test_dot"], [7, 3, 1, "", "test_gram_schmidt_orthogonalization"], [7, 3, 1, "", "test_isotropic_subspace"], [7, 3, 1, "", "test_orthogonal_complement"]], "tests.test_weighted_pauli_array": [[7, 2, 1, "", "TestWeightedPauliArray"], [7, 2, 1, "", "TestWeightedPauliArrayFunc"]], "tests.test_weighted_pauli_array.TestWeightedPauliArray": [[7, 3, 1, "", "test_cx"], [7, 3, 1, "", "test_cz"], [7, 3, 1, "", "test_extract"], [7, 3, 1, "", "test_from_weights_and_labels"], [7, 3, 1, "", "test_h"], [7, 3, 1, "", "test_s"], [7, 3, 1, "", "test_str"], [7, 3, 1, "", "test_to_npz_from_npz"], [7, 3, 1, "", "test_x"]], "tests.test_weighted_pauli_array.TestWeightedPauliArrayFunc": [[7, 3, 1, "", "test_anticommutator"], [7, 3, 1, "", "test_commutator"], [7, 3, 1, "", "test_concatenate"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "terms": {"": [1, 3, 4, 5, 8, 10, 12], "0": [2, 4, 5, 6, 9, 10, 11, 12], "0000": [9, 12], "0000j": [9, 12], "049": 10, "09": 5, "1": [4, 5, 9, 10, 11, 12], "10": 10, "11136": 5, "12": [5, 10], "124": 10, "14": 5, "15": 10, "1e": 5, "1j": 9, "2": [2, 4, 5, 9, 10, 11, 12], "20": 10, "2951": 10, "2c_i": 12, "2d": [2, 4], "2x2": 5, "3": [9, 11, 12], "3f": 10, "4": [9, 11, 12], "4d": 4, "5": [4, 9, 11, 12], "5000": 9, "545": 10, "6": [10, 12], "8": 12, "A": [2, 3, 4, 5, 6, 11], "As": 10, "For": [2, 5, 12], "If": [4, 5, 8], "In": [4, 10, 12], "It": [5, 11, 12], "The": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12], "These": 10, "To": 10, "With": 9, "_": [4, 9, 11, 12], "_1": 12, "_2": [10, 12], "_3": 12, "__add__": [1, 5], "__eq__": [1, 5], "__getitem__": [1, 5], "__init__": [1, 4, 5], "__mul__": [1, 5], "__rmul__": [1, 5], "__str__": [1, 5], "_build_bravyi_kitaev_mapping_matrix": [1, 4], "_description_": [5, 6], "_flip_factor": [1, 4], "_flip_oper": [1, 4], "_heavyside_matrix": [1, 4], "_i": [9, 12], "_j": [9, 12], "_k": 9, "_l": 9, "_mapping_matrix_inv": [1, 4], "_mul": [1, 5], "_nestedsequ": [5, 6], "_operator_ndarray_to_wpauli": [1, 5], "_parity_matrix": [1, 4], "_q": [4, 11], "_scalartype_co": [3, 5], "_supportsarrai": [5, 6], "_type_": [5, 6], "_update_factor": [1, 4], "_update_oper": [1, 4], "_update_operators_2": [1, 4], "_update_operators_4": [1, 4], "ab": 5, "about": 10, "access": [5, 9, 12], "accomplish": 10, "accord": 5, "accordingli": 5, "achiev": [11, 12], "act": [3, 4, 12], "actual": 12, "add": [1, 2, 5], "add_oper": [1, 5], "add_operator_array_type_1": [1, 5], "add_operator_array_type_2": [1, 5], "add_pauli_arrai": [1, 5], "add_scalar": [1, 5], "add_weighted_pauli_arrai": [1, 5], "addit": [4, 5], "adiabat": 9, "adjoint": [1, 5], "advantag": 8, "after": [2, 5, 6], "again": [5, 8, 10], "aim": 8, "all": [2, 3, 4, 5, 6, 9, 10, 11, 12], "all_equ": [1, 6], "allow": [10, 11], "along": [2, 5, 6, 11], "alreadi": [4, 5], "als": 5, "also": [5, 9, 10, 11, 12], "an": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12], "ani": [3, 4, 5, 6, 11], "anneal": 9, "annihil": 4, "anoth": [5, 12], "anticommut": [1, 5, 12], "anticommutators_pauli_arrai": 5, "appear": 5, "appl": 10, "appli": [2, 4, 5, 9], "appliabl": 5, "applic": 5, "ar": [2, 4, 5, 6, 8, 10, 11, 12], "arg": [2, 4], "argsort": [1, 5], "argument": [4, 10], "arrai": [2, 3, 4, 5, 6, 11, 12], "array_oper": [0, 1, 8], "arraylik": [5, 6], "arxiv": 8, "assembl": [4, 11], "assemble_creation_annihilation_oper": [1, 4], "assemble_one_body_operator_arrai": [1, 4], "assemble_qubit_hamiltonian_from_arrai": [1, 4], "assemble_qubit_hamiltonian_from_spars": [1, 4, 10], "assemble_two_body_operator_arrai": [1, 4], "assertionerror": 4, "assess": 12, "assign": [5, 11], "associ": [3, 5, 11], "associt": 4, "atom": 10, "attribut": 4, "avail": [4, 5, 8, 11, 12], "ax": [5, 11], "axi": [2, 5, 6, 11], "axis1": 5, "axis2": 5, "b": [5, 11], "ba": 5, "base": [4, 5, 7, 12], "basi": [2, 5, 6, 10, 11], "basis_pauli": [1, 5], "becom": 5, "been": 8, "befor": 10, "behav": 12, "behaviour": 12, "being": 4, "below": 5, "benchmark": 10, "between": [2, 5, 9, 12], "bigotimes_": 11, "binari": [0, 1, 5, 8, 10, 11], "bit": [2, 5, 9, 11, 12], "bit_matrix": 2, "bit_matrix_1": 2, "bit_matrix_2": 2, "bit_oper": [0, 1, 8], "bit_str": 2, "bit_strings_1": 2, "bit_strings_2": 2, "bit_sum": [1, 2], "bitwis": 5, "bitwise_commute_with": [1, 5], "bodi": [3, 4], "bool": [2, 4, 5, 6, 9, 11], "boolean": [2, 4, 5], "both": [5, 10, 11], "bravyi": 4, "bravyikitaev": [1, 4], "broadcast": [5, 6, 11, 12], "broadcast_shap": [1, 6], "broadcast_to": [1, 5], "broadcasted_index": [1, 6], "buffer": [5, 6], "build": 5, "build_basis_pauli": [1, 5], "byte": [5, 6], "c": 12, "c_i": 12, "calcul": [2, 5, 6], "call": 12, "callabl": 5, "can": [4, 5, 6, 8, 9, 10, 11, 12], "carri": 10, "case": 8, "cdot": [11, 12], "certain": 9, "chang": [5, 12], "charg": 10, "check": [2, 5, 6, 10], "class": [4, 5, 7], "classmethod": 5, "clifford": 5, "clifford_conjug": [1, 5], "clifford_conjugate_pauli_arrai": [1, 5], "clifford_conjugate_pauli_array_old": [1, 5], "clone": 8, "code": [11, 12], "coeffici": [3, 5, 12], "coher": 5, "coisotrop": 2, "coisotropic_subspac": [1, 2], "col_ind": 5, "column": [2, 5, 12], "combin": [5, 12], "combinaison": 9, "combinatori": 9, "combine_basis_pauli": [1, 5], "combine_repeated_term": [1, 5], "come": [9, 11], "comm_wpauli": 12, "command": 8, "commmut": 5, "common": 3, "commut": [1, 5, 8], "commutator2": [1, 5], "commutator_pauli_arrai": 5, "commute_with": [1, 5, 12], "compar": 10, "comparison": [5, 10], "compat": 10, "compens": 11, "complement": 2, "complet": [2, 6, 10], "complex": [3, 4, 5, 6, 11, 12], "compon": [10, 11], "compos": [1, 5, 12], "compose_oper": [1, 5], "compose_operator_array_type_1": [1, 5], "compose_operator_array_type_2": [1, 5], "compose_pauli_arrai": [1, 5], "compose_weighted_pauli_arrai": [1, 5], "composit": 5, "compress": 5, "compress_qubit": [1, 5], "comput": [2, 3, 4, 5, 9, 12], "concaten": [1, 2, 5, 6], "conctruct": 2, "condit": 5, "confirm": 10, "conjug": [2, 5], "conjugaison": 5, "conjugate_subspac": [1, 2], "connect": 9, "consid": [5, 9, 10], "consist": [3, 9], "construct": [4, 5, 9, 10], "contain": [3, 4, 5, 8], "containin": 6, "content": [0, 8], "context": 9, "contribut": 8, "control": 5, "control_qubit": 5, "conveni": [9, 11], "convent": 11, "convers": [0, 1, 8, 10], "convert": [2, 3, 4, 5, 10], "copi": [1, 5], "correct": 5, "correspond": [3, 4, 5], "count": [5, 11], "covari": 5, "covariances_from_pauli": [1, 5], "creat": [2, 3, 4, 5, 11], "creation": 4, "current": [2, 5], "cx": [1, 5], "cz": [1, 5], "d": [5, 9, 11], "data": [2, 3, 5, 8, 9, 12], "decompos": 11, "default": [4, 5, 6, 11], "defin": [2, 4, 5, 9, 11], "definin": 5, "definit": 11, "delta_": 4, "demand": 4, "demonstr": 8, "deriv": 5, "describ": 5, "descript": 8, "desir": 5, "destin": 5, "detail": [5, 12], "determin": [4, 5], "diagon": [5, 10], "differ": [10, 12], "dimens": [2, 4, 5, 11, 12], "dimension": [4, 11, 12], "directli": [5, 9], "directori": 8, "do": [4, 8], "do_commut": 12, "document": [8, 12], "doe": 4, "done": 6, "dot": [1, 2, 11], "download": 8, "drive_hamiltonian": 9, "driver": 10, "dtype": [3, 4, 5, 6, 9, 10, 11], "e": [5, 9], "each": [2, 3, 4, 5, 9, 11], "easi": [9, 12], "easili": 9, "echelon": 2, "edg": 9, "edit": 8, "effici": [1, 8, 12], "eigenvalu": 10, "eigval": 10, "eigvals_jw": 10, "eigvals_rd": 10, "element": [2, 5, 6, 11, 12], "elimin": 2, "els": 5, "empti": [1, 5], "en": 8, "encod": [5, 11, 12], "endian": 11, "ensembl": 9, "entir": 5, "entri": 5, "enumer": 9, "equal": [5, 6, 10, 12], "equat": 12, "equiv": 11, "equival": 12, "error": 5, "etc": 4, "even": 5, "everi": 5, "evolut": 9, "exampl": [9, 12], "except": [2, 10], "exchang": 5, "exclud": 5, "execut": 8, "exist": [5, 11], "expand": 5, "expand_dim": [1, 5], "expanded_pauli_arrai": 5, "expect": [5, 12], "expectation_values_from_pauli": [1, 5], "expon": 5, "exponenti": 11, "express": [9, 10], "extend": 12, "extract": [1, 3, 5], "extract_fermionic_op": [1, 3, 10], "ey": [9, 10, 11], "f": [4, 10, 12], "f_": 4, "fact": 11, "factor": [4, 5, 9, 11, 12], "fals": [2, 5, 6, 12], "fashion": 12, "fast": 9, "fast_flat_uniqu": [1, 5], "faster": [5, 10], "featur": 8, "feel": 8, "fermion": [0, 1, 8], "fermioncop": 10, "fermionic_op": 3, "fermionicop": 3, "fermionmap": [1, 4, 10], "file": [5, 8], "filenam": 5, "fill": [5, 10], "filter": 5, "filter_funct": 5, "filter_weight": [1, 5], "final": 10, "find": [2, 5, 9], "first": [2, 4, 5, 6, 12], "fit": 6, "flat": 5, "flatten": [1, 5, 12], "flip": [2, 4, 5], "flip_zx": [1, 2, 5], "flit": 8, "float": [4, 5, 6], "float64": [4, 5], "follow": [5, 8, 9, 11, 12], "fonction": 2, "form": [2, 3, 5], "forward": 10, "found": 8, "frac": [4, 9], "free": 8, "from": [2, 3, 5, 8, 9, 10, 11, 12], "from_label": [1, 5, 11, 12], "from_labels_and_weight": [1, 5, 11, 12], "from_matrix": [1, 5], "from_npz": [1, 5], "from_oper": [1, 5], "from_operator_list": [1, 5, 11], "from_operator_ndarrai": [1, 5, 11], "from_pauli": [1, 5], "from_pauli_arrai": [1, 5, 11], "from_paulis_and_weight": [1, 5, 9], "from_weighted_pauli_arrai": [1, 5, 11], "from_z_strings_and_x_strings_and_weight": [1, 5, 11], "from_zx_str": [1, 5], "function": [4, 5, 9, 12], "fundament": 11, "futur": 12, "g": 5, "gauss": 2, "gen_complete_pauli_array_basi": [1, 6], "gen_random_pauli_arrai": [1, 6], "gener": [1, 4, 5, 6], "generators_with_map": [1, 5], "get": [5, 10], "get_oper": [1, 5], "get_qubit_operators_list": [0, 7], "give": 12, "given": [2, 4, 5, 6, 11, 12], "gram": 2, "gram_schmidt_orthogon": [1, 2], "graph": 9, "ground": 9, "guarante": 10, "h": [1, 5, 9, 10], "ha": [5, 8], "hadamard": 5, "hamiltonia": 4, "hamiltonian": 4, "hamltonian": 9, "handl": 12, "hat": [4, 9, 11, 12], "have": [8, 11], "heavisid": 4, "heavysid": 4, "heavyside_matrix": [1, 4], "help": 8, "here": [5, 9], "hidden": [5, 11], "how": [8, 10, 12], "howev": 12, "http": 8, "i": [2, 4, 5, 6, 9, 10, 11, 12], "i_": 4, "i_edg": 9, "i_orbit": 4, "ident": [1, 5], "identifi": [4, 5], "idx": [5, 6], "ignor": 5, "ii": 12, "iiii": [11, 12], "iiiii": 9, "iiiix": 9, "iiix": [11, 12], "iiixi": 9, "iiiyz": 9, "iiizi": 9, "iiizz": 9, "iixii": 9, "iixz": [11, 12], "iiyiz": 9, "iiyz": [11, 12], "iiyzi": 9, "iizii": 9, "iiziz": 9, "iizyi": 9, "iizzi": 9, "ij": [4, 11, 12], "imag": 4, "implement": [2, 3, 4, 5], "import": [9, 10, 11, 12], "improv": 5, "independ": [2, 5], "indepth": 8, "index": [5, 6], "indic": [3, 4, 5], "infer": 12, "inform": 11, "initi": [4, 5, 10, 11], "innvers": 5, "inplac": 5, "input": [2, 3, 4, 5, 6], "ins": 2, "insert": 5, "inspect": [1, 5, 9, 12], "inspir": 5, "instanc": 5, "int": [2, 3, 4, 5, 6, 10], "integ": [2, 5], "integr": 4, "interact": 9, "interfac": [3, 5], "interpret": 11, "intersect": [1, 2], "intersection_row_spac": [1, 2], "introduc": 12, "inv": [1, 2], "invers": [2, 4], "invert": 10, "involv": [5, 10, 12], "io": 8, "is_broadcast": [1, 6], "is_clifford": [1, 5], "is_coisotrop": [1, 2], "is_concatenat": [1, 6], "is_diagon": [1, 5], "is_ident": [1, 5], "is_isotrop": [1, 2], "is_lagrangian": [1, 2], "is_orthogon": [1, 2], "is_scalar": [1, 5], "is_stackat": [1, 6], "is_unitari": [1, 5], "ising_hamiltonian": 9, "isotrop": 2, "isotropic_subspac": [1, 2], "isotropic_zx_str": 2, "issu": 8, "item": 5, "its": [2, 4, 8, 9, 11], "itself": 5, "ixiii": 9, "ixyz": 5, "ixzz": [11, 12], "iyzii": 9, "iyzz": [11, 12], "iz": 12, "izyii": 9, "izzii": 9, "j": [4, 5, 9, 12], "j_": 4, "j_orbit": 4, "join": 5, "jordan": [2, 4], "jordanwign": [1, 4, 10], "jordanwignermapp": 10, "jw_map": 10, "k": [4, 9, 10, 11, 12], "k_": 4, "k_orbit": 4, "keep": 5, "kei": 5, "kernel": [1, 2], "ket": 9, "kind": [9, 12], "kitaev": 4, "known": 9, "kwarg": 5, "l": [4, 9], "l_": 4, "l_orbit": 4, "label": [3, 5, 11], "label_table_1d": [1, 5], "label_table_2d": [1, 5], "label_table_nd": [1, 5], "label_to_z_string_x_str": [1, 5], "labels_and_weights_from_qubit_oper": [1, 3], "labels_to_z_strings_x_str": [1, 5], "lagrangian": 2, "lagrangian_subspac": [1, 2], "last": [2, 5, 11], "ldot": [4, 11], "leat": 11, "leav": 5, "len": [9, 10], "length": [2, 5, 11], "less": 10, "let": 10, "li": 10, "librari": [3, 5, 8], "lih": 10, "like": 5, "linalg": 10, "line": 2, "linear": [5, 9], "linearli": [2, 5], "link": 8, "list": [2, 3, 4, 5, 6], "littl": 11, "locat": 4, "look": 9, "lower": 10, "lst": 6, "m": 4, "m2": 10, "m_": 4, "made": 5, "mai": 10, "main": 4, "majorana": [1, 4], "make": [5, 9, 10, 12], "manipul": [1, 8], "map": [0, 1, 3, 5, 8], "mapper": 10, "mapping_matrix": [1, 4, 10], "mapping_matrix_inv": [1, 4], "mask": 5, "match": 4, "mathbf": [11, 12], "mathsf": [4, 11], "matmul": [1, 2], "matric": [2, 5, 12], "matrix": [2, 4, 5, 10, 12], "matrix_el": 5, "matrix_from_zx_int": [1, 5], "maxcut": 9, "measur": 10, "merg": 2, "merge_zx_str": [1, 2], "method": [4, 9, 11, 12], "methodnam": 7, "might": [2, 12], "modifi": [5, 6], "modul": [0, 8], "mol_info": 10, "molecul": 10, "moment": 12, "more": [5, 10, 12], "most": 12, "move": 5, "moveaxi": [1, 5], "mu": 4, "much": 10, "mul_scalar": [1, 5], "mul_weight": [1, 5], "multidimension": 11, "multipl": [2, 5, 11], "multipli": 5, "must": 5, "mutual": 2, "n": [2, 5, 6, 9, 10, 11], "name": [1, 4, 5], "natur": 3, "nb_qubit": 3, "ndarrai": [2, 3, 4, 5, 11, 12], "ndim": [1, 5], "necessari": 4, "need": [5, 10, 12], "neg": 5, "new": [1, 4, 5, 12], "new_concatenate_shap": [1, 6], "new_pauli": 12, "new_pauli_arrai": 5, "new_pauliarrai": 5, "new_weight": 5, "non": 5, "none": [4, 5, 9, 12], "nonzero": 5, "notat": 5, "noteworthi": 10, "notimpl": 5, "np": [2, 3, 4, 5, 9, 10, 11], "npz": 5, "num_id": [1, 5], "num_non_id": [1, 5], "num_qubit": [1, 4, 5, 10, 11], "num_spin_orbit": 10, "num_term": [1, 5, 10], "number": [2, 3, 4, 5, 6, 10, 11], "number_of_edg": 9, "number_of_nod": 9, "number_of_qubit": 6, "numpi": [4, 5, 6, 9, 11, 12], "o": [11, 12], "object": [3, 4, 5, 12], "obtain": [2, 3, 11], "occup": 4, "occupation_oper": [1, 4], "often": 9, "onc": [5, 8], "one": [2, 3, 4, 5, 9, 10, 11], "one_bodi": 4, "one_body_operator_from_arrai": [1, 4], "one_body_operator_from_spars": [1, 4], "one_body_tupl": [4, 10], "onli": [5, 10, 12], "op": [4, 5, 9], "opa": 4, "open": 8, "openfermion": [0, 1, 8], "oper": [0, 1, 2, 3, 4, 8, 9, 10], "operator_1": [5, 12], "operator_2": [5, 12], "operator_3": 12, "operator_arrai": 3, "operator_array_from_sparse_pauli_list": [1, 3], "operator_array_to_pauli_sentence_list": [1, 3], "operator_array_to_sparse_pauli_list": [1, 3], "operator_array_type_1": [0, 1, 8], "operator_array_type_2": [0, 1, 8], "operator_from_sparse_pauli": [1, 3], "operator_to_sparse_pauli": [1, 3, 10], "operatorarrai": [3, 4, 5], "operatorarraytype1": [1, 3, 4, 5], "operatorarraytype2": [1, 3, 5], "operators_1": 5, "operators_2": 5, "operatorss": 5, "optim": 9, "option": [4, 5, 6, 8], "orbit": [3, 4], "order": [4, 5], "orgin": 5, "origin": [5, 6], "orthogon": 2, "orthogonal_basi": [1, 2], "orthogonal_compl": [1, 2], "orthogonal_zx_str": 2, "other": [2, 5, 11, 12], "otherwis": [2, 5, 6, 12], "otim": 9, "out": 10, "outer": 12, "over": [2, 5, 11], "own": 9, "p": [4, 9, 11, 12], "p_": 4, "pa": [5, 6, 9], "pa_jw_qubit_hamiltonien": 10, "pa_rd_qubit_hamiltonien": 10, "packag": [0, 8], "page": 8, "pair": [4, 5, 9], "paper": 8, "paramet": [2, 3, 4, 5, 6], "pariti": [1, 4], "parity_matrix": [1, 4], "part": 5, "pass": 5, "pauli": [0, 1, 3, 4, 6, 8, 9, 10, 11, 12], "pauli_arrai": [0, 1, 8, 9], "pauli_array_from_pauli_list": [1, 3], "pauli_array_librari": [0, 1, 8], "pauli_array_to_pauli_list": [1, 3], "pauli_list": 3, "pauliarrai": [9, 12], "paulilist": 3, "paulis_1": [5, 12], "paulis_2": [5, 12], "paulis_3": 12, "paulis_covari": 5, "paulis_expectation_valu": 5, "paulisent": 3, "paulistirng": 5, "paulistr": 5, "pennylan": [0, 1, 8], "perform": [2, 5, 12], "phase": 5, "physicist": 4, "pip": 8, "pmod": 12, "point": 10, "posit": 5, "possibl": [6, 11, 12], "power": [1, 5], "pq": 4, "practic": 12, "present": 5, "pretti": 10, "primarili": 5, "print": [9, 10, 12], "problem": [9, 10], "procedur": 2, "process": [4, 10], "produc": [2, 5, 10, 12], "product": [2, 5, 11, 12], "properti": [4, 5], "prototyp": 5, "provid": [2, 5, 10, 11], "purpos": 5, "pypa": 8, "pyproject": 8, "pyscfdriv": 10, "q": [4, 11], "qi_": 4, "qiskit": [0, 1, 8], "qiskit_natur": 10, "qj_": 4, "qk_": 4, "qk_jw_qubit_hamiltonian": 10, "ql_": 4, "quantum": [3, 9], "quartet": 4, "qubit": [3, 4, 5, 6, 8, 11], "qubit_op": 3, "qubit_operator_to_oper": [1, 3], "qubit_operators_to_operator_arrai": [1, 3], "qubit_ord": 5, "qubitoper": 3, "rais": [4, 5], "randint": 10, "random": [1, 5, 6], "randomli": 10, "rang": 5, "rank": [1, 2], "rd_map": 10, "real": 4, "recommand": 8, "reconstruct": 5, "reconstrut": 5, "reduc": [5, 12], "refer": 5, "relat": [9, 11], "relev": 5, "reli": 11, "remain": 5, "remov": [1, 2, 5], "remove_small_weight": [1, 5], "remove_unused_basis_pauli": [1, 5], "reorder": 5, "reorder_qubit": [1, 5], "repeat": [5, 12], "repositori": 8, "reprenset": 5, "repres": [4, 5, 11, 12], "represent": [4, 5, 12], "requir": 4, "reshap": [1, 5], "residu": 5, "respect": 5, "result": [2, 5, 10, 12], "retriev": 5, "return": [2, 3, 4, 5, 6, 12], "return_count": 5, "return_index": 5, "return_invers": 5, "right": 5, "rigor": 10, "robust": 5, "row": [2, 5], "row_echelon": [1, 2], "row_ind": 5, "row_spac": [1, 2], "rule": 5, "run": 10, "runtest": 7, "same": [2, 3, 5, 10, 11, 12], "satisfi": [4, 5], "save": 5, "scalar": 5, "schmidt": 2, "sec": 10, "second": [2, 4, 5, 6, 12], "second_q": 10, "second_q_hamiltonian": 10, "second_q_op": 10, "see": [10, 12], "seen": 12, "select": 5, "self": 5, "self_copi": 5, "sens": 2, "set": [2, 4, 5, 12], "shape": [1, 4, 5, 6, 11], "shape1": 6, "shape2": 6, "should": [10, 11], "show": [5, 10, 12], "showcas": 8, "sign": [3, 4], "similar": 10, "similarli": 12, "simplect": 2, "simpli": 11, "simplif": 5, "simplifi": [1, 5], "singl": [5, 12], "size": [1, 5, 11], "slice": 5, "small": 5, "smaller": [5, 10], "smplectic": 2, "so": [8, 10, 11], "solvabl": 9, "some": [5, 12], "sort": [5, 10], "sort_pauli": [1, 5], "sourc": [2, 3, 4, 5, 6, 7], "space": 2, "span": 2, "spars": [4, 5], "sparse_matrix_from_zx_int": [1, 5], "sparse_pauli": 3, "sparsepauliop": [3, 10], "spawn": 2, "specifi": [5, 10, 11], "spin": [9, 10], "split": 2, "split_zx_str": [1, 2], "squeez": [1, 5], "stabl": 8, "stack": 6, "start": [9, 10], "state": [4, 9, 10], "static": [4, 5], "still": 5, "sto3g": 10, "store": 11, "str": [3, 4, 5, 6], "straight": 10, "string": [2, 4, 5, 6, 9, 10, 11, 12], "strings_to_int": [1, 2], "structur": [2, 5, 8, 9, 12], "subarrai": 5, "submodul": [0, 1, 8], "subpackag": [0, 8], "subset": 5, "subspac": 2, "sum": [1, 2, 4, 5, 9, 11, 12], "sum_": [9, 11, 12], "sum_k": 12, "summat": [5, 11], "summation_axi": 5, "support": [5, 11], "sure": 5, "swap": 5, "swapax": [1, 5], "swape": 5, "symbol": 8, "symlink": 8, "symmetri": 4, "symplect": [0, 1, 8], "system": 9, "t0": 10, "take": [5, 10], "take_qubit": [1, 5], "target": 5, "target_qubit": 5, "task": 10, "technic": 8, "tensor": [1, 5, 11], "tensor_oper": [1, 5], "tensor_pauli_arrai": [1, 5], "tensor_weighted_pauli_arrai": [1, 5], "term": [3, 5], "test": 0, "test_": [0, 7], "test_add_pauli_arrai": [0, 7], "test_anticommut": [0, 7], "test_argsort": [0, 7], "test_assemble_qubit_hamiltonian_from_spars": [0, 7], "test_bits_oper": 0, "test_bitwisecommute_with": [0, 7], "test_broadcast_to": [0, 7], "test_clifford_conjug": [0, 7], "test_clifford_conjugate_pauli_arrai": [0, 7], "test_combine_basis_pauli": [0, 7], "test_combine_repeated_term": [0, 7], "test_commut": [0, 7], "test_commute_with": [0, 7], "test_compos": [0, 7], "test_compose_pauli_arrai": [0, 7], "test_concaten": [0, 7], "test_convers": 0, "test_creation_annihilation_oper": [0, 7], "test_cx": [0, 7], "test_cz": [0, 7], "test_dot": [0, 7], "test_eq": [0, 7], "test_equ": [0, 7], "test_expand_dim": [0, 7], "test_extract": [0, 7], "test_fast_flat_uniqu": [0, 7], "test_from_label": [0, 7], "test_from_pauli_arrai": [0, 7], "test_from_weights_and_label": [0, 7], "test_gener": [0, 7], "test_generators_with_map": [0, 7], "test_get_item": [0, 7], "test_getitem": [0, 7], "test_gram_schmidt_orthogon": [0, 7], "test_h": [0, 7], "test_init": [0, 7], "test_inspect": [0, 7], "test_intersect": [0, 7], "test_isotropic_subspac": [0, 7], "test_kernel": [0, 7], "test_kernel_2": [0, 7], "test_majorana": [0, 7], "test_map": 0, "test_matrix_from_zx_int": [0, 7], "test_mul_weight": [0, 7], "test_occupation_oper": [0, 7], "test_one_body_to_pauli_operator_from_spars": [0, 7], "test_one_body_to_pauli_operator_from_tensor": [0, 7], "test_oper": 0, "test_operator_array_type_1": 0, "test_operator_array_type_2": 0, "test_operator_from_sparse_pauli": [0, 7], "test_operator_to_sparse_pauli": [0, 7], "test_orthogonal_compl": [0, 7], "test_pauli_arrai": 0, "test_pauli_array_from_pauli_list": [0, 7], "test_pauli_array_to_pauli_list": [0, 7], "test_pow": [0, 7], "test_rank": [0, 7], "test_remove_small_weight": [0, 7], "test_remove_unused_basis_pauli": [0, 7], "test_reorder_qubit": [0, 7], "test_row_echelon": [0, 7], "test_set_item": [0, 7], "test_str": [0, 7], "test_sum": [0, 7], "test_swapax": [0, 7], "test_symplect": 0, "test_to_label": [0, 7], "test_to_matric": [0, 7], "test_to_npz_from_npz": [0, 7], "test_trac": [0, 7], "test_two_body_to_pauli_operator_from_spars": [0, 7], "test_two_body_to_pauli_operator_from_tensor": [0, 7], "test_uniqu": [0, 7], "test_weighted_pauli_arrai": 0, "test_weighted_pauli_array_from_pauli_list": [0, 7], "test_x": [0, 7], "test_z_string_x_string_to_label": [0, 7], "testbitsoper": [0, 7], "testcas": 7, "testjordanwignermap": [0, 7], "testoper": [0, 7], "testoperatorarraytype1": [0, 7], "testoperatorarraytype2": [0, 7], "testpauliarrai": [0, 7], "testpauliarrayfunc": [0, 7], "testpaulifromqiskit": [0, 7], "testsymplecticbitsoper": [0, 7], "testweightedpauliarrai": [0, 7], "testweightedpauliarrayfunc": [0, 7], "text": [4, 9, 10], "tfrac": 9, "th": [4, 11], "than": [5, 10], "them": 4, "therefor": [10, 11, 12], "theta_": 4, "thi": [2, 4, 5, 8, 9, 10, 11, 12], "threshold": 5, "through": 8, "time": [5, 10], "to_label": [1, 5], "to_matric": [1, 5], "to_matrix": [1, 5, 10], "to_npz": [1, 5], "todo": 5, "togeth": 5, "toml": 8, "tool": [9, 10], "toolbox": [1, 8], "topic": 8, "total": 5, "trace": [1, 5], "transform": [3, 5], "transpos": 4, "treat": 5, "tri": 11, "triangl": 10, "tril": 10, "true": [2, 5, 6, 9, 10, 12], "try": 9, "tupl": [2, 3, 4, 5, 6], "tutori": [9, 10], "twice": 5, "two": [2, 3, 4, 5, 6, 10, 11, 12], "two_bodi": 4, "two_body_operator_from_arrai": [1, 4], "two_body_operator_from_spars": [1, 4], "two_body_tupl": [4, 10], "type": [2, 3, 4, 5, 6, 11], "u": 4, "unchang": 5, "under": 8, "underli": 5, "understand": 8, "uniform": 5, "union": 5, "uniqu": [1, 5], "unitari": 5, "unus": 5, "updat": [4, 5], "update_weight": [1, 5], "update_weights_from_oth": [1, 5], "upon": 5, "upper": 10, "us": [2, 3, 4, 5, 8, 9, 10, 11, 12], "util": [0, 1, 8], "valid": 10, "valu": [2, 3, 4, 5], "valueerror": 5, "variou": 5, "vector": [2, 11], "verifi": 5, "versa": 5, "version": 5, "via": 9, "vice": 5, "w_": [11, 12], "w_i": 12, "w_j": 12, "wai": [9, 10, 12], "want": 8, "we": [8, 9, 10, 12], "weight": [1, 3, 5, 11], "weighted_pauli": 5, "weighted_pauli_arrai": [0, 1, 8, 12], "weighted_pauli_array_from_pauli_list": [1, 3], "weightedpauliarrai": [1, 3, 5, 12], "weightedpaulistr": 5, "welcom": 8, "well": 12, "were": 12, "wether": 2, "when": [5, 9], "where": [4, 5, 11, 12], "which": [2, 3, 5, 6, 9, 10], "while": [10, 11, 12], "whole": 4, "whose": 5, "wigner": 4, "wise": [2, 5, 12], "within": [5, 12], "work": [5, 12], "wpa": 5, "wpauli": [1, 5, 11], "wpauli_arrai": 5, "wpaulis_1": [5, 12], "wpaulis_2": [5, 12], "wpaulis_3": 12, "wpaulis_4": 12, "write": 9, "x": [1, 2, 4, 5, 9, 11, 12], "x_int": 5, "x_string": [1, 2, 5, 9, 11], "xi": 12, "xiiii": 9, "xor": 2, "xx": 12, "xy": 12, "xz": [2, 12], "xz_string": [1, 5], "xzzz": [11, 12], "y": [5, 11], "yield": 12, "yiiiz": 9, "you": 8, "yx": 12, "yziii": 9, "yzzz": [11, 12], "z": [2, 4, 5, 9, 11, 12], "z_int": 5, "z_q": 11, "z_string": [1, 2, 5, 9, 11], "z_string_x_string_to_label": [1, 5], "zero": [2, 9, 11], "zi": 12, "ziiii": 9, "ziiiz": 9, "zx": [2, 5], "zx_string": [1, 2, 5], "zx_strings_1": 2, "zx_strings_2": 2, "zyiii": 9, "zz": 12, "zziii": 9}, "titles": ["pauliarray", "pauliarray package", "pauliarray.binary package", "pauliarray.conversion package", "pauliarray.mapping package", "pauliarray.pauli package", "pauliarray.utils package", "tests package", "PauliArray", "Commutators", "Fermion to Qubit Mapping", "Data Structures", "Operations"], "titleterms": {"Ising": 9, "To": 8, "api": 8, "array_oper": 6, "binari": 2, "bit_oper": 2, "commut": [9, 12], "composit": 12, "content": [1, 2, 3, 4, 5, 6, 7], "convers": 3, "data": 11, "develop": 8, "drive": 9, "fermion": [4, 10], "gener": 10, "guid": 8, "hamiltonian": [9, 10], "index": 12, "individu": 9, "instal": 8, "jordan": 10, "map": [4, 10], "mask": 12, "modul": [1, 2, 3, 4, 5, 6, 7], "openfermion": 3, "oper": [5, 11, 12], "operator_array_type_1": 5, "operator_array_type_2": 5, "operatorarraytype1": 11, "packag": [1, 2, 3, 4, 5, 6, 7], "pauli": 5, "pauli_arrai": 5, "pauli_array_librari": 6, "pauliarrai": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11], "pennylan": 3, "qiskit": [3, 10], "qubit": 10, "random": 10, "refer": 8, "structur": 11, "submodul": [2, 3, 4, 5, 6, 7], "subpackag": 1, "symplect": 2, "test": 7, "test_bits_oper": 7, "test_convers": 7, "test_map": 7, "test_oper": 7, "test_operator_array_type_1": 7, "test_operator_array_type_2": 7, "test_pauli_arrai": 7, "test_symplect": 7, "test_weighted_pauli_arrai": 7, "tutori": 8, "user": 8, "util": 6, "weighted_pauli_arrai": 5, "weightedpauliarrai": 11, "wigner": 10}})